#!/usr/bin/env node

// Script to generate static SEO pages for programmatic SEO
const fs = require('fs');
const path = require('path');

// Shared navigation component
function getNavigation() {
    return `
    <nav class="bg-white shadow-sm border-b">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-16">
                <div class="flex items-center">
                    <a href="/protein-hunter/" class="text-xl font-bold text-primary">ü•© Protein Hunter</a>
                </div>
                <div class="flex items-center space-x-4">
                    <a href="/protein-hunter/produkty/" class="text-gray-700 hover:text-primary">Produkty</a>
                    <a href="/protein-hunter/lean-proteins/" class="text-gray-700 hover:text-primary">Lean Proteiny</a>
                    <a href="/protein-hunter/recepty/" class="text-gray-700 hover:text-primary">Recepty</a>
                    <a href="/protein-hunter/slovnik/" class="text-gray-700 hover:text-primary">Slovn√≠k</a>
                    <a href="/protein-hunter/porovnani/" class="text-gray-700 hover:text-primary">Porovn√°n√≠</a>
                    <a href="/protein-hunter/blog/" class="text-gray-700 hover:text-primary">Blog</a>
                    <a href="/protein-hunter/kalkulacka.html" class="text-gray-700 hover:text-primary">Kalkulaƒçka</a>
                </div>
            </div>
        </div>
    </nav>`;
}

// Shared footer component
function getFooter() {
    return `
    <footer class="bg-gray-800 text-white mt-16 py-8">
        <div class="max-w-7xl mx-auto px-4">
            <div class="grid md:grid-cols-4 gap-8 mb-6">
                <div>
                    <h3 class="font-bold text-lg mb-3">ü•© Protein Hunter</h3>
                    <p class="text-gray-400 text-sm">Datab√°ze proteinov√Ωch potravin a recept≈Ø pro fitness nad≈°ence.</p>
                </div>
                <div>
                    <h4 class="font-semibold mb-3">Produkty</h4>
                    <ul class="space-y-2 text-sm">
                        <li><a href="/protein-hunter/produkty/" class="text-gray-400 hover:text-white">V≈°echny produkty</a></li>
                        <li><a href="/protein-hunter/lean-proteins/" class="text-gray-400 hover:text-white">Lean Proteiny</a></li>
                        <li><a href="/protein-hunter/kategorie/meat.html" class="text-gray-400 hover:text-white">Maso</a></li>
                        <li><a href="/protein-hunter/kategorie/fish.html" class="text-gray-400 hover:text-white">Ryby</a></li>
                    </ul>
                </div>
                <div>
                    <h4 class="font-semibold mb-3">Obsah</h4>
                    <ul class="space-y-2 text-sm">
                        <li><a href="/protein-hunter/recepty/" class="text-gray-400 hover:text-white">Recepty</a></li>
                        <li><a href="/protein-hunter/slovnik/" class="text-gray-400 hover:text-white">Slovn√≠k</a></li>
                        <li><a href="/protein-hunter/porovnani/" class="text-gray-400 hover:text-white">Porovn√°n√≠</a></li>
                        <li><a href="/protein-hunter/blog/" class="text-gray-400 hover:text-white">Blog</a></li>
                    </ul>
                </div>
                <div>
                    <h4 class="font-semibold mb-3">N√°stroje</h4>
                    <ul class="space-y-2 text-sm">
                        <li><a href="/protein-hunter/kalkulacka.html" class="text-gray-400 hover:text-white">Kalkulaƒçka proteinu</a></li>
                    </ul>
                </div>
            </div>
            <div class="border-t border-gray-700 pt-6 text-center text-sm text-gray-400">
                <p>&copy; 2025 Protein Hunter. V≈°echna pr√°va vyhrazena.</p>
            </div>
        </div>
    </footer>`;
}

// Shared HTML head (returns only DOCTYPE and opening tags, NO closing </head> or <body>)
function getHtmlHeadStart(title, description) {
    return `<!DOCTYPE html>
<html lang="cs">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${title}</title>
    <meta name="description" content="${description}">
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: '#dc2626'
                    }
                }
            }
        }
    </script>`;
}

// Simplified HTML head for pages without extra meta tags
function getHtmlHead(title, description) {
    return getHtmlHeadStart(title, description) + `
</head>
<body class="bg-gray-50">`;
}

// Products database with full nutrition
const productsDatabase = [
    // ‚úÖ Ml√©ƒçn√© v√Ωrobky - Lean proteins
    { id: 1, name: "Tvaroh polotuƒçn√Ω Pilos", price: 36.90, weight: 250, proteinPer100g: 12.5, caloriesPer100g: 125, fatPer100g: 4.5, carbsPer100g: 3.5, category: "dairy", slug: "tvaroh-polotucny-pilos", description: "Polotuƒçn√Ω tvaroh s 12.5g proteinu na 100g" },
    { id: 3, name: "≈òeck√Ω jogurt 0% Milko", price: 24.90, weight: 140, proteinPer100g: 10.0, caloriesPer100g: 59, fatPer100g: 0.2, carbsPer100g: 4.0, category: "dairy", slug: "recky-jogurt-0-milko", description: "≈òeck√Ω jogurt bez tuku s 10g proteinu" },
    { id: 4, name: "Cottage cheese Pribin√°ƒçek", price: 29.90, weight: 200, proteinPer100g: 11.0, caloriesPer100g: 81, fatPer100g: 1.5, carbsPer100g: 3.3, category: "dairy", slug: "cottage-cheese-pribinacek", description: "Cottage cheese s 11g proteinu na 100g" },
    { id: 21, name: "Proteinov√Ω jogurt Danone", price: 34.90, weight: 160, proteinPer100g: 15.0, caloriesPer100g: 103, fatPer100g: 0.1, carbsPer100g: 10.4, category: "dairy", slug: "proteinovy-jogurt-danone", description: "Vysokoproteinov√Ω jogurt s 15g proteinu" },
    { id: 24, name: "ƒåerstv√Ω tvaroh 0%", price: 19.90, weight: 250, proteinPer100g: 11.0, caloriesPer100g: 72, fatPer100g: 0.3, carbsPer100g: 4.0, category: "dairy", slug: "cerstva-tvaroh-0", description: "Odtuƒçnƒõn√Ω tvaroh 0% tuku" },
    { id: 22, name: "Mozzarella di bufala", price: 89.90, weight: 125, proteinPer100g: 18.1, caloriesPer100g: 280, fatPer100g: 22.0, carbsPer100g: 3.1, category: "dairy", slug: "mozzarella-di-bufala", description: "Italsk√° mozzarella z buvol√≠ho ml√©ka" },
    { id: 23, name: "Feta s√Ωr", price: 69.90, weight: 200, proteinPer100g: 14.2, caloriesPer100g: 264, fatPer100g: 21.3, carbsPer100g: 4.1, category: "dairy", slug: "feta-syr", description: "≈òeck√Ω feta s√Ωr ve slan√©m n√°levu" },

    // ü•© Maso - Lean proteins ‚≠ê
    { id: 2, name: "Ku≈ôec√≠ prsa", price: 159.90, weight: 500, proteinPer100g: 23.0, caloriesPer100g: 165, fatPer100g: 3.6, carbsPer100g: 0, category: "meat", slug: "kureci-prsa", description: "ƒåerstv√° ku≈ôec√≠ prsa s vysok√Ωm obsahem proteinu" },
    { id: 10, name: "Kr≈Øt√≠ prsa", price: 189.90, weight: 500, proteinPer100g: 24.6, caloriesPer100g: 135, fatPer100g: 1.7, carbsPer100g: 0, category: "meat", slug: "kruti-prsa", description: "ƒåerstv√° kr≈Øt√≠ prsa s n√≠zk√Ωm obsahem tuku" },
    { id: 11, name: "Hovƒõz√≠ mlet√© 5%", price: 149.90, weight: 400, proteinPer100g: 21.8, caloriesPer100g: 137, fatPer100g: 5.0, carbsPer100g: 0, category: "meat", slug: "hovezi-mlete-5", description: "Hovƒõz√≠ mlet√© maso s 5% tuku" },
    { id: 12, name: "Vep≈ôov√° panenka", price: 299.90, weight: 600, proteinPer100g: 22.2, caloriesPer100g: 143, fatPer100g: 5.6, carbsPer100g: 0, category: "meat", slug: "veprova-panenka", description: "Nej≈°≈•avnatƒõj≈°√≠ ƒç√°st vep≈ôov√©ho masa" },
    { id: 54, name: "Kr√°liƒç√≠ maso", price: 349.90, weight: 800, proteinPer100g: 21.8, caloriesPer100g: 136, fatPer100g: 5.0, carbsPer100g: 0, category: "meat", slug: "kralici-maso", description: "Dietn√≠ kr√°liƒç√≠ maso s n√≠zk√Ωm tukem" },
    { id: 55, name: "Zvƒõ≈ôina - srnƒç√≠", price: 599.90, weight: 500, proteinPer100g: 22.5, caloriesPer100g: 120, fatPer100g: 2.4, carbsPer100g: 0, category: "meat", slug: "zverina-srnci", description: "Divok√© srnƒç√≠ maso bez antibiotik" },
    { id: 56, name: "Kanƒç√≠ klob√°sa", price: 179.90, weight: 300, proteinPer100g: 16.8, caloriesPer100g: 301, fatPer100g: 25.0, carbsPer100g: 1.2, category: "meat", slug: "kanci-klobasa", description: "Tradiƒçn√≠ kanƒç√≠ klob√°sa bez konzervant≈Ø" },

    // üêü Ryby - Lean kings ‚≠ê‚≠ê
    { id: 8, name: "Treska fil√© mra≈æen√°", price: 189.90, weight: 400, proteinPer100g: 18.2, caloriesPer100g: 82, fatPer100g: 0.7, carbsPer100g: 0, category: "fish", slug: "treska-file-mrazena", description: "Mra≈æen√© tre≈°ƒç√≠ fil√© bez kost√≠" },
    { id: 9, name: "Krevety tyg≈ô√≠", price: 249.90, weight: 300, proteinPer100g: 24.0, caloriesPer100g: 106, fatPer100g: 1.7, carbsPer100g: 0.9, category: "fish", slug: "krevety-tygri", description: "Mra≈æen√© tyg≈ô√≠ krevety bez hlavy" },
    { id: 7, name: "Tu≈à√°k v oleji", price: 45.90, weight: 160, proteinPer100g: 29.1, caloriesPer100g: 198, fatPer100g: 8.2, carbsPer100g: 0, category: "fish", slug: "tunak-v-oleji", description: "Konzervovan√Ω tu≈à√°k - v√Ωborn√Ω zdroj proteinu" },
    { id: 6, name: "Losos norsk√Ω filet", price: 299.90, weight: 500, proteinPer100g: 25.4, caloriesPer100g: 206, fatPer100g: 13.4, carbsPer100g: 0, category: "fish", slug: "losos-norsky-filet", description: "ƒåerstv√Ω lososov√Ω filet s omega-3 a vysok√Ωm proteinem" },
    { id: 51, name: "Sardiny v olivov√©m oleji", price: 89.90, weight: 120, proteinPer100g: 24.6, caloriesPer100g: 208, fatPer100g: 11.5, carbsPer100g: 0, category: "fish", slug: "sardiny-v-olivovem-oleji", description: "Portugalsk√© sardiny v olivov√©m oleji" },
    { id: 52, name: "Makrela uzen√°", price: 129.90, weight: 300, proteinPer100g: 23.8, caloriesPer100g: 262, fatPer100g: 18.0, carbsPer100g: 0, category: "fish", slug: "makrela-uzena", description: "Tradiƒçnƒõ uzen√° makrela" },
    { id: 53, name: "Krab alja≈°sk√Ω", price: 299.90, weight: 200, proteinPer100g: 19.4, caloriesPer100g: 97, fatPer100g: 1.5, carbsPer100g: 0, category: "fish", slug: "krab-aljasky", description: "Mra≈æen√© krab√≠ maso z Alja≈°ky" },

    // üå± Rostlinn√© proteiny
    { id: 13, name: "Tofu Lunter", price: 39.90, weight: 200, proteinPer100g: 15.7, caloriesPer100g: 144, fatPer100g: 8.7, carbsPer100g: 1.9, category: "plant", slug: "tofu-lunter", description: "Klasick√© tofu z ƒçesk√Ωch s√≥jov√Ωch bob≈Ø" },
    { id: 14, name: "Tempeh", price: 89.90, weight: 200, proteinPer100g: 20.3, caloriesPer100g: 193, fatPer100g: 10.8, carbsPer100g: 7.6, category: "plant", slug: "tempeh", description: "Fermentovan√© s√≥jov√© boby - probiotika a protein" },
    { id: 15, name: "Seitan", price: 79.90, weight: 200, proteinPer100g: 25.0, caloriesPer100g: 370, fatPer100g: 1.9, carbsPer100g: 14.0, category: "plant", slug: "seitan", description: "P≈°eniƒçn√Ω protein - masov√° n√°hrada" },
    { id: 57, name: "Edamame mra≈æen√©", price: 79.90, weight: 400, proteinPer100g: 11.9, caloriesPer100g: 122, fatPer100g: 5.2, carbsPer100g: 8.9, category: "vegan", slug: "edamame-mrazene", description: "Mlad√© s√≥jov√© lusky - kompletn√≠ protein" },
    { id: 62, name: "TVP granul√°t", price: 39.90, weight: 200, proteinPer100g: 52.0, caloriesPer100g: 315, fatPer100g: 0.8, carbsPer100g: 30.0, category: "vegan", slug: "tvp-granulat", description: "Texturovan√Ω rostlinn√Ω protein" },
    { id: 63, name: "Rostlinn√Ω burger Beyond", price: 89.90, weight: 226, proteinPer100g: 17.7, caloriesPer100g: 250, fatPer100g: 18.0, carbsPer100g: 3.0, category: "vegan", slug: "rostlinny-burger-beyond", description: "Vegansk√Ω burger p≈ôipom√≠naj√≠c√≠ maso" },

    // üåæ Lu≈°tƒõniny - Budget kings
    { id: 5, name: "ƒåerven√° ƒçoƒçka", price: 39.90, weight: 500, proteinPer100g: 25.0, caloriesPer100g: 352, fatPer100g: 1.1, carbsPer100g: 60.0, category: "legumes", slug: "cervena-cocka", description: "ƒåerven√° ƒçoƒçka such√° s 25g proteinu" },
    { id: 16, name: "ƒåern√© fazole", price: 29.90, weight: 400, proteinPer100g: 21.6, caloriesPer100g: 341, fatPer100g: 1.4, carbsPer100g: 62.0, category: "legumes", slug: "cerne-fazole", description: "Konzervovan√© ƒçern√© fazole" },
    { id: 58, name: "Hummus klasick√Ω", price: 39.90, weight: 200, proteinPer100g: 7.9, caloriesPer100g: 166, fatPer100g: 9.6, carbsPer100g: 14.3, category: "vegan", slug: "hummus-klasicky", description: "Kr√©mov√° cizrnov√° pomaz√°nka s tahini" },
    { id: 59, name: "Falafel mix", price: 49.90, weight: 200, proteinPer100g: 13.3, caloriesPer100g: 333, fatPer100g: 17.8, carbsPer100g: 31.8, category: "vegan", slug: "falafel-mix", description: "Smƒõs na p≈ô√≠pravu cizrnov√Ωch kuliƒçek" },

    // ü•ú O≈ôechy - High fat but tasty
    { id: 17, name: "Mandle blan≈°√≠rovan√©", price: 199.90, weight: 500, proteinPer100g: 21.2, caloriesPer100g: 579, fatPer100g: 49.9, carbsPer100g: 21.6, category: "nuts", slug: "mandle-blanstirovane", description: "Loupan√° mandle bez slupky" },
    { id: 18, name: "Vla≈°sk√© o≈ôechy", price: 169.90, weight: 500, proteinPer100g: 15.2, caloriesPer100g: 654, fatPer100g: 65.2, carbsPer100g: 13.7, category: "nuts", slug: "vlasske-orechy", description: "Kvalitn√≠ vla≈°sk√© o≈ôechy - zdroj omega-3" },
    { id: 19, name: "Chia sem√≠nka", price: 149.90, weight: 250, proteinPer100g: 16.5, caloriesPer100g: 486, fatPer100g: 30.7, carbsPer100g: 42.1, category: "nuts", slug: "chia-seminko", description: "Superfood chia sem√≠nka s proteinem a vl√°kninou" },
    { id: 20, name: "Ara≈°√≠dov√© m√°slo", price: 89.90, weight: 340, proteinPer100g: 25.8, caloriesPer100g: 588, fatPer100g: 50.0, carbsPer100g: 20.0, category: "nuts", slug: "arasidove-maslo", description: "100% ara≈°√≠dov√© m√°slo bez p≈ôidan√©ho cukru" },
    { id: 46, name: "Konopn√° sem√≠nka", price: 179.90, weight: 250, proteinPer100g: 31.6, caloriesPer100g: 553, fatPer100g: 48.8, carbsPer100g: 8.7, category: "nuts", slug: "konopna-seminko", description: "Konopn√° sem√≠nka s kompletn√≠m profilem aminokyselin" },
    { id: 47, name: "Lnƒõn√° sem√≠nka", price: 69.90, weight: 500, proteinPer100g: 18.3, caloriesPer100g: 534, fatPer100g: 42.2, carbsPer100g: 28.9, category: "nuts", slug: "lnena-seminko", description: "Lnƒõn√° sem√≠nka bohat√° na omega-3" },
    { id: 48, name: "Sluneƒçnicov√° sem√≠nka", price: 89.90, weight: 500, proteinPer100g: 20.8, caloriesPer100g: 584, fatPer100g: 51.5, carbsPer100g: 20.0, category: "nuts", slug: "slunecnicova-seminko", description: "Pra≈æen√° sluneƒçnicov√° sem√≠nka" },
    { id: 49, name: "D√Ω≈àov√° sem√≠nka", price: 199.90, weight: 500, proteinPer100g: 30.2, caloriesPer100g: 559, fatPer100g: 49.1, carbsPer100g: 10.7, category: "nuts", slug: "dynova-seminko", description: "D√Ω≈àov√° sem√≠nka s vysok√Ωm obsahem zinku a proteinu" },
    { id: 60, name: "Tahini pasta", price: 89.90, weight: 340, proteinPer100g: 17.0, caloriesPer100g: 595, fatPer100g: 53.8, carbsPer100g: 21.2, category: "vegan", slug: "tahini-pasta", description: "Sezamov√° pasta bohat√° na protein" },
    
    // ü•õ Dal≈°√≠ ml√©ƒçn√© v√Ωrobky
    { id: 21, name: "Proteinov√Ω jogurt Danone", price: 34.90, weight: 160, proteinPer100g: 15.0, category: "dairy", slug: "proteinovy-jogurt-danone", description: "Vysokoproteinov√Ω jogurt s 15g proteinu" },
    { id: 22, name: "Mozzarella di bufala", price: 89.90, weight: 125, proteinPer100g: 18.1, category: "dairy", slug: "mozzarella-di-bufala", description: "Italsk√° mozzarella z buvol√≠ho ml√©ka" },
    { id: 23, name: "Feta s√Ωr", price: 69.90, weight: 200, proteinPer100g: 14.2, category: "dairy", slug: "feta-syr", description: "≈òeck√Ω feta s√Ωr ve slan√©m n√°levu" },
    { id: 24, name: "ƒåerstv√Ω tvaroh 0%", price: 19.90, weight: 250, proteinPer100g: 11.0, category: "dairy", slug: "cerstva-tvaroh-0", description: "Odtuƒçnƒõn√Ω tvaroh 0% tuku" },
    
    // üíä Dopl≈àky stravy
    { id: 25, name: "Whey protein Nutrend", price: 899.90, weight: 1000, proteinPer100g: 78.0, category: "supplements", slug: "whey-protein-nutrend", description: "Syrov√°tkov√Ω protein s vanilkovou p≈ô√≠chut√≠" },
    { id: 26, name: "Kasein protein", price: 1099.90, weight: 1000, proteinPer100g: 85.0, category: "supplements", slug: "kasein-protein", description: "Pomal√Ω kaseinov√Ω protein na noc" },
    { id: 27, name: "Rostlinn√Ω protein Blend", price: 799.90, weight: 1000, proteinPer100g: 75.0, category: "supplements", slug: "rostlinny-protein-blend", description: "Mix hr√°≈°kov√©ho a r√Ω≈æov√©ho proteinu" },
    { id: 28, name: "BCAA powder", price: 449.90, weight: 500, proteinPer100g: 0.0, category: "supplements", slug: "bcaa-powder", description: "Aminokyseliny s rozvƒõtven√Ωm ≈ôetƒõzcem" },
    { id: 29, name: "Protein bar ƒçokol√°dov√Ω", price: 45.90, weight: 60, proteinPer100g: 30.0, category: "supplements", slug: "protein-bar-cokoladovy", description: "ƒåokol√°dov√° proteinov√° tyƒçinka s 18g proteinu" },
    { id: 30, name: "Kreatin monohydr√°t", price: 299.90, weight: 500, proteinPer100g: 0.0, category: "supplements", slug: "kreatin-monohydrat", description: "ƒåist√Ω kreatin pro s√≠lu a objem sval≈Ø" },
    
    // üåæ Obiloviny a pseudocere√°lie
    { id: 31, name: "Quinoa b√≠l√°", price: 149.90, weight: 500, proteinPer100g: 14.1, category: "grains", slug: "quinoa-bila", description: "Andsk√© quinoa s kompletn√≠m profilem aminokyselin" },
    { id: 32, name: "Ovesn√© vloƒçky jemn√©", price: 35.90, weight: 500, proteinPer100g: 13.2, category: "grains", slug: "ovesne-vlocky-jemne", description: "Jemn√© ovesn√© vloƒçky pro sn√≠danƒõ a peƒçen√≠" },
    { id: 33, name: "Pohankov√° krupice", price: 69.90, weight: 500, proteinPer100g: 13.3, category: "grains", slug: "pohankova-krupice", description: "Bezlepkov√° pohanka s vysok√Ωm obsahem proteinu" },
    { id: 34, name: "Amarant", price: 89.90, weight: 400, proteinPer100g: 13.6, category: "grains", slug: "amarant", description: "Starobyl√° plodina s kompletn√≠mi proteiny" },
    { id: 35, name: "Bulgur", price: 49.90, weight: 500, proteinPer100g: 12.3, category: "grains", slug: "bulgur", description: "P≈ôedva≈ôen√° p≈°enice s o≈ôechovou chut√≠" },
    { id: 36, name: "R√Ω≈æe basmati hnƒõd√°", price: 79.90, weight: 1000, proteinPer100g: 7.9, category: "grains", slug: "ryze-basmati-hneda", description: "Aromatick√° hnƒõd√° r√Ω≈æe s vl√°kninou" },
    
    // ü•ö Vejce a vajeƒçn√© produkty
    { id: 37, name: "Vejce slepiƒç√≠ M", price: 45.90, weight: 600, proteinPer100g: 13.0, category: "eggs", slug: "vejce-slepici-m", description: "ƒåerstv√° slepiƒç√≠ vejce velikost M" },
    { id: 38, name: "Vejce p≈ôepelƒç√≠", price: 79.90, weight: 180, proteinPer100g: 13.1, category: "eggs", slug: "vejce-prepelci", description: "Delik√°tn√≠ p≈ôepelƒç√≠ vejce s vysokou nutriƒçn√≠ hodnotou" },
    { id: 39, name: "Vajeƒçn√Ω b√≠lek v pr√°≈°ku", price: 299.90, weight: 250, proteinPer100g: 82.0, category: "supplements", slug: "vajjecny-bilek-v-prasku", description: "Su≈°en√Ω vajeƒçn√Ω b√≠lek bez cholesterolu" },
    
    // üçÑ Houby
    { id: 40, name: "≈Ωampiony ƒçerstv√©", price: 59.90, weight: 500, proteinPer100g: 3.1, category: "vegetables", slug: "zampiony-cerstve", description: "ƒåerstv√© ≈æampiony pƒõstovan√© v ƒåR" },
    { id: 41, name: "Shiitake su≈°en√©", price: 199.90, weight: 100, proteinPer100g: 9.6, category: "vegetables", slug: "shiitake-susene", description: "Su≈°en√© shiitake houby - umami a protein" },
    
    // ü•õ Alternativn√≠ ml√©ka a jogurty
    { id: 42, name: "S√≥jov√© ml√©ko neslazen√©", price: 29.90, weight: 1000, proteinPer100g: 3.3, category: "dairy", slug: "sojove-mleko-neslazene", description: "Rostlinn√© s√≥jov√© ml√©ko bez cukru" },
    { id: 43, name: "Mandlov√© ml√©ko", price: 39.90, weight: 1000, proteinPer100g: 0.5, category: "dairy", slug: "mandlove-mleko", description: "Jemn√© mandlov√© ml√©ko pro smoothie" },
    { id: 44, name: "Kokosov√© ml√©ko", price: 49.90, weight: 400, proteinPer100g: 2.3, category: "dairy", slug: "kokosove-mleko", description: "Hust√© kokosov√© ml√©ko pro kari a dezerty" },
    { id: 45, name: "Ovesn√Ω jogurt Alpro", price: 34.90, weight: 500, proteinPer100g: 3.0, category: "dairy", slug: "ovesny-jogurt-alpro", description: "Rostlinn√Ω jogurt z ovsa" },
    
    // üåø Semena a superfoods
    { id: 46, name: "Konopn√° sem√≠nka", price: 179.90, weight: 250, proteinPer100g: 31.6, category: "nuts", slug: "konopna-seminko", description: "Konopn√° sem√≠nka s kompletn√≠m profilem aminokyselin" },
    { id: 47, name: "Lnƒõn√° sem√≠nka", price: 69.90, weight: 500, proteinPer100g: 18.3, category: "nuts", slug: "lnena-seminko", description: "Lnƒõn√° sem√≠nka bohat√° na omega-3" },
    { id: 48, name: "Sluneƒçnicov√° sem√≠nka", price: 89.90, weight: 500, proteinPer100g: 20.8, category: "nuts", slug: "slunecnicova-seminko", description: "Pra≈æen√° sluneƒçnicov√° sem√≠nka" },
    { id: 49, name: "D√Ω≈àov√° sem√≠nka", price: 199.90, weight: 500, proteinPer100g: 30.2, category: "nuts", slug: "dynova-seminko", description: "D√Ω≈àov√° sem√≠nka s vysok√Ωm obsahem zinku a proteinu" },
    { id: 50, name: "Spirulina pr√°≈°ek", price: 299.90, weight: 100, proteinPer100g: 57.5, category: "supplements", slug: "spirulina-prasek", description: "Modrozelen√° ≈ôasa s 57% proteinem" },
    
    // üêü Dal≈°√≠ ryby a mo≈ôsk√© plody
    { id: 51, name: "Sardiny v olivov√©m oleji", price: 89.90, weight: 120, proteinPer100g: 24.6, category: "fish", slug: "sardiny-v-olivovem-oleji", description: "Portugalsk√© sardiny v olivov√©m oleji" },
    { id: 52, name: "Makrela uzen√°", price: 129.90, weight: 300, proteinPer100g: 23.8, category: "fish", slug: "makrela-uzena", description: "Tradiƒçnƒõ uzen√° makrela" },
    { id: 53, name: "Krab alja≈°sk√Ω", price: 299.90, weight: 200, proteinPer100g: 19.4, category: "fish", slug: "krab-aljasky", description: "Mra≈æen√© krab√≠ maso z Alja≈°ky" },
    
    // ü•© Specialty maso
    { id: 54, name: "Kr√°liƒç√≠ maso", price: 349.90, weight: 800, proteinPer100g: 21.8, category: "meat", slug: "kralici-maso", description: "Dietn√≠ kr√°liƒç√≠ maso s n√≠zk√Ωm tukem" },
    { id: 55, name: "Zvƒõ≈ôina - srnƒç√≠", price: 599.90, weight: 500, proteinPer100g: 22.5, category: "meat", slug: "zverina-srnci", description: "Divok√© srnƒç√≠ maso bez antibiotik" },
    { id: 56, name: "Kanƒç√≠ klob√°sa", price: 179.90, weight: 300, proteinPer100g: 16.8, category: "meat", slug: "kanci-klobasa", description: "Tradiƒçn√≠ kanƒç√≠ klob√°sa bez konzervant≈Ø" },
    
    // üå± Vegansk√© produkty (100% rostlinn√©)
    { id: 57, name: "Edamame mra≈æen√©", price: 79.90, weight: 400, proteinPer100g: 11.9, category: "vegan", slug: "edamame-mrazene", description: "Mlad√© s√≥jov√© lusky - kompletn√≠ protein" },
    { id: 58, name: "Hummus klasick√Ω", price: 39.90, weight: 200, proteinPer100g: 7.9, category: "vegan", slug: "hummus-klasicky", description: "Kr√©mov√° cizrnov√° pomaz√°nka s tahini" },
    { id: 59, name: "Falafel mix", price: 49.90, weight: 200, proteinPer100g: 13.3, category: "vegan", slug: "falafel-mix", description: "Smƒõs na p≈ô√≠pravu cizrnov√Ωch kuliƒçek" },
    { id: 60, name: "Tahini pasta", price: 89.90, weight: 340, proteinPer100g: 17.0, category: "vegan", slug: "tahini-pasta", description: "Sezamov√° pasta bohat√° na protein" },
    { id: 61, name: "Jackfruit v n√°levu", price: 69.90, weight: 565, proteinPer100g: 1.7, category: "vegan", slug: "jackfruit-v-nalevu", description: "Mlad√Ω jackfruit - n√°hrada trhan√© masa" },
    { id: 62, name: "TVP granul√°t", price: 39.90, weight: 200, proteinPer100g: 52.0, category: "vegan", slug: "tvp-granulat", description: "Texturovan√Ω rostlinn√Ω protein" },
    { id: 63, name: "Rostlinn√Ω burger Beyond", price: 89.90, weight: 226, proteinPer100g: 17.7, category: "vegan", slug: "rostlinny-burger-beyond", description: "Vegansk√Ω burger p≈ôipom√≠naj√≠c√≠ maso" },
    { id: 64, name: "Vegansk√° ≈°unka", price: 59.90, weight: 100, proteinPer100g: 14.5, category: "vegan", slug: "veganska-sunka", description: "Rostlinn√° alternativa ≈°unky" },
    { id: 65, name: "Lu≈°tƒõninov√© tƒõstoviny", price: 69.90, weight: 250, proteinPer100g: 21.0, category: "vegan", slug: "lusteninove-testoviny", description: "Tƒõstoviny z ƒçerven√© ƒçoƒçky" },
    { id: 66, name: "Nutritional yeast", price: 149.90, weight: 200, proteinPer100g: 45.0, category: "vegan", slug: "nutritional-yeast", description: "Lah≈Ødkov√© dro≈æd√≠ s B12 vitam√≠nem" },
    { id: 67, name: "Aquafaba (cizrnov√° voda)", price: 29.90, weight: 400, proteinPer100g: 1.0, category: "vegan", slug: "aquafaba", description: "N√°hrada vajeƒçn√Ωch b√≠lk≈Ø pro peƒçen√≠" },
    { id: 68, name: "Vegansk√© p√°rky", price: 79.90, weight: 200, proteinPer100g: 18.0, category: "vegan", slug: "veganske-parky", description: "Rostlinn√© p√°rky s kou≈ôovou p≈ô√≠chut√≠" },
    { id: 69, name: "Oatly Barista", price: 49.90, weight: 1000, proteinPer100g: 1.0, category: "vegan", slug: "oatly-barista", description: "Ovesn√© ml√©ko pro k√°vov√© speciality" },
    { id: 70, name: "Vegansk√Ω s√Ωr na pizzu", price: 69.90, weight: 200, proteinPer100g: 0.9, category: "vegan", slug: "vegansky-syr-pizza", description: "Tav√≠c√≠ se rostlinn√Ω s√Ωr na pizzu" },
    { id: 71, name: "Hemp tofu", price: 89.90, weight: 200, proteinPer100g: 17.0, category: "vegan", slug: "hemp-tofu", description: "Tofu z konopn√Ωch sem√≠nek" },
    { id: 72, name: "Vegansk√° majon√©za", price: 39.90, weight: 240, proteinPer100g: 0.3, category: "vegan", slug: "veganska-majoneza", description: "Rostlinn√° majon√©za bez vajec" },
    { id: 73, name: "Miso pasta", price: 79.90, weight: 300, proteinPer100g: 12.8, category: "vegan", slug: "miso-pasta", description: "Fermentovan√° s√≥jov√° pasta - umami" },
    { id: 74, name: "Wakame ≈ôasy", price: 149.90, weight: 100, proteinPer100g: 3.0, category: "vegan", slug: "wakame-rasy", description: "Mo≈ôsk√© ≈ôasy s miner√°ly a proteinem" },
    { id: 75, name: "Nori listy", price: 89.90, weight: 50, proteinPer100g: 41.4, category: "vegan", slug: "nori-listy", description: "Lisovan√© mo≈ôsk√© ≈ôasy na sushi" },
    { id: 76, name: "Vegansk√Ω protein shake", price: 59.90, weight: 330, proteinPer100g: 6.1, category: "vegan", slug: "vegansky-protein-shake", description: "Hotov√Ω proteinov√Ω n√°poj z hrachu" },
    
    // ü•ë Low Carb produkty (n√≠zk√Ω obsah sacharid≈Ø)
    { id: 77, name: "Keto chl√©b proteinov√Ω", price: 89.90, weight: 300, proteinPer100g: 19.5, category: "lowcarb", slug: "keto-chleb-proteinovy", description: "N√≠zkosacharidov√Ω chl√©b s vysok√Ωm proteinem" },
    { id: 78, name: "Shirataki nudle", price: 49.90, weight: 200, proteinPer100g: 0.2, category: "lowcarb", slug: "shirataki-nudle", description: "Konjakov√© nudle bez kalori√≠ a sacharid≈Ø" },
    { id: 79, name: "MCT olej", price: 399.90, weight: 500, proteinPer100g: 0.0, category: "keto", slug: "mct-olej", description: "Kokosov√Ω MCT olej pro ket√≥zu" },
    { id: 80, name: "Mandlov√° mouka", price: 129.90, weight: 500, proteinPer100g: 21.2, category: "lowcarb", slug: "mandlova-mouka", description: "Bezlepkov√° mouka pro low carb peƒçen√≠" },
    { id: 81, name: "Psyllium vl√°knina", price: 149.90, weight: 300, proteinPer100g: 1.5, category: "lowcarb", slug: "psyllium-vlaknina", description: "Rozpustn√° vl√°knina pro keto peƒçen√≠" },
    { id: 82, name: "Erythritol sladidlo", price: 99.90, weight: 500, proteinPer100g: 0.0, category: "lowcarb", slug: "erythritol-sladidlo", description: "P≈ô√≠rodn√≠ sladidlo bez kalori√≠" },
    { id: 83, name: "Kokosov√° mouka", price: 89.90, weight: 500, proteinPer100g: 19.3, category: "lowcarb", slug: "kokosova-mouka", description: "Low carb mouka s vl√°kninou" },
    { id: 84, name: "Avok√°do", price: 39.90, weight: 200, proteinPer100g: 2.0, category: "keto", slug: "avokado", description: "Zdrav√© tuky pro keto dietu" },
    { id: 85, name: "Ghee p≈ôepu≈°tƒõn√© m√°slo", price: 189.90, weight: 450, proteinPer100g: 0.3, category: "keto", slug: "ghee-prepustene-maslo", description: "ƒåist√© m√°slo pro vysokoteplotn√≠ va≈ôen√≠" },
    { id: 86, name: "Bone broth protein", price: 899.90, weight: 500, proteinPer100g: 90.0, category: "paleo", slug: "bone-broth-protein", description: "Protein z kostn√≠ho v√Ωvaru" },
    
    // üêÉ High Protein produkty (extra vysok√Ω protein)
    { id: 87, name: "Isolate 95", price: 1199.90, weight: 1000, proteinPer100g: 95.0, category: "highprotein", slug: "isolate-95", description: "ƒåist√Ω izol√°t s 95% proteinu" },
    { id: 88, name: "Beef protein", price: 999.90, weight: 1000, proteinPer100g: 87.0, category: "highprotein", slug: "beef-protein", description: "Hovƒõz√≠ protein bez lakt√≥zy" },
    { id: 89, name: "Egg white protein", price: 1099.90, weight: 1000, proteinPer100g: 85.0, category: "highprotein", slug: "egg-white-protein", description: "Vajeƒçn√Ω protein s BCAA" },
    { id: 90, name: "Protein pancake mix", price: 149.90, weight: 500, proteinPer100g: 35.0, category: "highprotein", slug: "protein-pancake-mix", description: "Smƒõs na proteinov√© palaƒçinky" },
    { id: 91, name: "Quest bar", price: 69.90, weight: 60, proteinPer100g: 33.3, category: "highprotein", slug: "quest-bar", description: "Proteinov√° tyƒçinka s vl√°kninou" },
    
    // üåæ Slow Carb produkty (pomal√© sacharidy)
    { id: 92, name: "Bat√°ty", price: 39.90, weight: 1000, proteinPer100g: 1.6, category: "slowcarb", slug: "bataty", description: "Sladk√© brambory s n√≠zk√Ωm GI" },
    { id: 93, name: "ƒåern√° r√Ω≈æe", price: 99.90, weight: 500, proteinPer100g: 8.9, category: "slowcarb", slug: "cerna-ryze", description: "Antioxidaƒçn√≠ r√Ω≈æe s vl√°kninou" },
    { id: 94, name: "Steel cut oats", price: 79.90, weight: 500, proteinPer100g: 12.5, category: "slowcarb", slug: "steel-cut-oats", description: "Sekan√© ovesn√© vloƒçky - pomal√© vst≈ôeb√°v√°n√≠" },
    { id: 95, name: "Teff mouka", price: 149.90, weight: 500, proteinPer100g: 13.3, category: "slowcarb", slug: "teff-mouka", description: "Etiopsk√° mouka s n√≠zk√Ωm GI" },
    
    // üåæ Bez lepku produkty
    { id: 96, name: "R√Ω≈æov√© tƒõstoviny", price: 59.90, weight: 400, proteinPer100g: 7.5, category: "glutenfree", slug: "ryzove-testoviny", description: "Bezlepkov√© tƒõstoviny z r√Ω≈æe" },
    { id: 97, name: "Amarantov√© lup√≠nky", price: 69.90, weight: 300, proteinPer100g: 13.6, category: "glutenfree", slug: "amarantove-lupinky", description: "K≈ôupav√© bezlepkov√© lup√≠nky" },
    { id: 98, name: "Kuku≈ôiƒçn√© tortily", price: 39.90, weight: 320, proteinPer100g: 5.7, category: "glutenfree", slug: "kukuricne-tortily", description: "Mƒõkk√© kuku≈ôiƒçn√© tortily" },
    { id: 99, name: "Bezlepkov√Ω chl√©b", price: 79.90, weight: 400, proteinPer100g: 4.5, category: "glutenfree", slug: "bezlepkovy-chleb", description: "Chl√©b bez lepku s sem√≠nky" },
    
    // ü¶ñ Paleo produkty
    { id: 100, name: "Kokosov√Ω nektar", price: 149.90, weight: 350, proteinPer100g: 0.1, category: "paleo", slug: "kokosovy-nektar", description: "P≈ô√≠rodn√≠ sladidlo z kokosov√© palmy" },
    { id: 101, name: "Tyg≈ô√≠ o≈ôechy", price: 119.90, weight: 200, proteinPer100g: 4.6, category: "paleo", slug: "tygri-orechy", description: "Hl√≠zy s prebiotiky (tiger nuts)" },
    { id: 102, name: "Cassava mouka", price: 89.90, weight: 500, proteinPer100g: 1.4, category: "paleo", slug: "cassava-mouka", description: "Paleo mouka z manioku" },
    { id: 103, name: "Plantain chips", price: 69.90, weight: 100, proteinPer100g: 2.3, category: "paleo", slug: "plantain-chips", description: "K≈ôupav√© chipsy z plantain≈Ø" }
];

// Process products
// Default nutrition values by category (estimated if missing)
const defaultNutrition = {
    dairy: { calories: 100, fat: 3, carbs: 5 },
    meat: { calories: 150, fat: 5, carbs: 0 },
    fish: { calories: 120, fat: 3, carbs: 0 },
    legumes: { calories: 340, fat: 2, carbs: 60 },
    nuts: { calories: 600, fat: 50, carbs: 20 },
    plant: { calories: 150, fat: 8, carbs: 8 },
    supplements: { calories: 380, fat: 5, carbs: 10 },
    grains: { calories: 350, fat: 3, carbs: 70 },
    eggs: { calories: 150, fat: 11, carbs: 1 },
    vegetables: { calories: 30, fat: 0.5, carbs: 6 },
    vegan: { calories: 200, fat: 10, carbs: 15 }
};

const productsData = productsDatabase.map(product => {
    const totalProtein = (product.weight / 100) * product.proteinPer100g;
    const pricePerGramProtein = product.price / totalProtein;

    // Fill missing nutrition data with defaults
    const categoryDefaults = defaultNutrition[product.category] || defaultNutrition.plant;
    const calories = product.caloriesPer100g || categoryDefaults.calories;
    const fat = product.fatPer100g !== undefined ? product.fatPer100g : categoryDefaults.fat;
    const carbs = product.carbsPer100g !== undefined ? product.carbsPer100g : categoryDefaults.carbs;

    // Calculate protein/kcal ratio (key metric for lean proteins)
    const proteinPerKcal = calories > 0 ? product.proteinPer100g / calories : 0;

    // Determine protein density category
    let proteinDensity = 'low';
    if (proteinPerKcal >= 0.15) proteinDensity = 'excellent'; // Treska, krevety
    else if (proteinPerKcal >= 0.12) proteinDensity = 'high';   // Lean meats
    else if (proteinPerKcal >= 0.08) proteinDensity = 'good';   // Normal meats, fish
    else if (proteinPerKcal >= 0.05) proteinDensity = 'medium'; // Tofu, some dairy

    // Calculate macro percentages
    const proteinCals = product.proteinPer100g * 4;
    const fatCals = fat * 9;
    const carbsCals = carbs * 4;
    const totalCals = proteinCals + fatCals + carbsCals;

    const proteinPercent = totalCals > 0 ? Math.round((proteinCals / totalCals) * 100) : 0;
    const fatPercent = totalCals > 0 ? Math.round((fatCals / totalCals) * 100) : 0;
    const carbsPercent = totalCals > 0 ? Math.round((carbsCals / totalCals) * 100) : 0;

    return {
        ...product,
        caloriesPer100g: calories,
        fatPer100g: fat,
        carbsPer100g: carbs,
        totalProtein: Math.round(totalProtein * 10) / 10,
        pricePerGramProtein: Math.round(pricePerGramProtein * 100) / 100,
        proteinPerKcal: Math.round(proteinPerKcal * 1000) / 1000,
        proteinDensity,
        proteinPercent,
        fatPercent,
        carbsPercent
    };
});

const categoryNames = {
    'dairy': 'Ml√©ƒçn√© v√Ωrobky',
    'meat': 'Maso',
    'fish': 'Ryby a mo≈ôsk√© plody',
    'legumes': 'Lu≈°tƒõniny',
    'nuts': 'O≈ôechy a semena',
    'plant': 'Rostlinn√© proteiny',
    'supplements': 'Dopl≈àky stravy',
    'grains': 'Obiloviny',
    'eggs': 'Vejce',
    'vegetables': 'Zelenina a houby',
    'vegan': 'Vegansk√©',
    'lowcarb': 'Low Carb',
    'slowcarb': 'Slow Carb',
    'keto': 'Keto',
    'paleo': 'Paleo',
    'highprotein': 'High Protein',
    'glutenfree': 'Bez lepku',
    'other': 'Ostatn√≠'
};

// HTML template for product pages
function generateProductPage(product) {
    const rankPosition = productsData.sort((a, b) => a.pricePerGramProtein - b.pricePerGramProtein).findIndex(p => p.id === product.id) + 1;
    const similarProducts = productsData.filter(p => p.category === product.category && p.id !== product.id).slice(0, 3);

    // Comparisons that will be created later - hardcoded for now
    const comparisonPairs = [
        { product1: 'tvaroh-polotucny-pilos', product2: 'cottage-cheese-pribinacek' },
        { product1: 'kureci-prsa', product2: 'kruti-prsa' },
        { product1: 'whey-protein-nutrend', product2: 'beef-protein' },
        { product1: 'tofu-lunter', product2: 'tempeh' },
        { product1: 'cerne-fazole', product2: 'quinoa-bila' },
        { product1: 'losos-norsky-filet', product2: 'tunak-v-oleji' },
        { product1: 'recky-jogurt-0-milko', product2: 'proteinovy-jogurt-danone' },
        { product1: 'arasidove-maslo', product2: 'tahini-pasta' },
        { product1: 'ovesne-vlocky-jemne', product2: 'quinoa-bila' },
        { product1: 'mandlova-mouka', product2: 'kokosova-mouka' }
    ];

    // Find comparisons involving this product
    const productComparisons = comparisonPairs.filter(comp =>
        comp.product1 === product.slug || comp.product2 === product.slug
    ).map(comp => {
        const otherProductSlug = comp.product1 === product.slug ? comp.product2 : comp.product1;
        const otherProduct = productsData.find(p => p.slug === otherProductSlug);
        return {
            otherProduct,
            comparisonSlug: `${comp.product1}-vs-${comp.product2}`
        };
    }).filter(comp => comp.otherProduct);

    return `${getHtmlHeadStart(
        `${product.name} - Protein ${product.proteinPer100g}g/100g za ${product.pricePerGramProtein.toFixed(2)} Kƒç/g`,
        `${product.name}: ${product.proteinPer100g}g proteinu na 100g, celkem ${product.totalProtein}g za ${product.price} Kƒç. Cena ${product.pricePerGramProtein.toFixed(2)} Kƒç za gram proteinu.`
    )}
    <meta name="keywords" content="${product.name}, protein, cena proteinu, ${categoryNames[product.category].toLowerCase()}, fitness potraviny">

    <!-- Open Graph -->
    <meta property="og:title" content="${product.name} - Protein ${product.proteinPer100g}g/100g">
    <meta property="og:description" content="${product.description}">
    <meta property="og:type" content="product">
    <meta property="og:url" content="http://46.62.166.240/protein-hunter/produkty/${product.slug}.html">

    <!-- Schema.org structured data -->
    <script type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@type": "Product",
        "name": "${product.name}",
        "description": "${product.description}",
        "category": "${categoryNames[product.category]}",
        "offers": {
            "@type": "Offer",
            "price": "${product.price}",
            "priceCurrency": "CZK"
        },
        "nutrition": {
            "@type": "NutritionInformation",
            "proteinContent": "${product.proteinPer100g}g"
        }
    }
    </script>
</head>
<body class="bg-gray-50">
    ${getNavigation()}

    <!-- Breadcrumbs -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-3">
        <nav class="text-sm">
            <a href="/protein-hunter/" class="text-gray-500 hover:text-primary">Dom≈Ø</a>
            <span class="mx-2 text-gray-400">/</span>
            <a href="/protein-hunter/produkty/" class="text-gray-500 hover:text-primary">Produkty</a>
            <span class="mx-2 text-gray-400">/</span>
            <a href="/protein-hunter/kategorie/${product.category}.html" class="text-gray-500 hover:text-primary">${categoryNames[product.category]}</a>
            <span class="mx-2 text-gray-400">/</span>
            <span class="text-gray-900 font-medium">${product.name}</span>
        </nav>
    </div>

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <!-- Product Header -->
        <div class="bg-white rounded-lg shadow p-8 mb-8">
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                <div>
                    <div class="mb-4">
                        <span class="inline-block bg-primary/10 text-primary px-3 py-1 rounded-full text-sm font-medium">
                            #${rankPosition} nejlevnƒõj≈°√≠ protein
                        </span>
                    </div>
                    
                    <h1 class="text-3xl font-bold text-gray-900 mb-4">${product.name}</h1>
                    <p class="text-lg text-gray-600 mb-6">${product.description}</p>
                    
                    <div class="grid grid-cols-2 gap-4 mb-6">
                        <div class="bg-green-50 p-4 rounded-lg text-center">
                            <div class="text-2xl font-bold text-green-600">${product.pricePerGramProtein.toFixed(2)} Kƒç</div>
                            <div class="text-sm text-green-700">za 1g proteinu</div>
                            <div class="text-xs text-green-600 mt-1">${rankPosition <= 5 ? 'üèÜ TOP 5' : rankPosition <= 10 ? '‚≠ê TOP 10' : 'üìä Hodnocen√≠'}</div>
                        </div>
                        <div class="bg-blue-50 p-4 rounded-lg text-center">
                            <div class="text-2xl font-bold text-blue-600">${product.proteinPer100g}g</div>
                            <div class="text-sm text-blue-700">protein/100g</div>
                            <div class="text-xs text-blue-600 mt-1">${product.proteinPer100g >= 25 ? 'üí™ Vysok√Ω' : product.proteinPer100g >= 15 ? '‚úì St≈ôedn√≠' : 'üìä Z√°kladn√≠'}</div>
                        </div>
                        <div class="bg-purple-50 p-4 rounded-lg text-center">
                            <div class="text-2xl font-bold text-purple-600">${product.price} Kƒç</div>
                            <div class="text-sm text-purple-700">celkov√° cena</div>
                            <div class="text-xs text-purple-600 mt-1">${(product.totalProtein / product.price).toFixed(1)}g/Kƒç</div>
                        </div>
                        <div class="bg-orange-50 p-4 rounded-lg text-center">
                            <div class="text-2xl font-bold text-orange-600">${product.weight >= 1000 ? (product.weight/1000).toFixed(1) + 'kg' : product.weight + 'g'}</div>
                            <div class="text-sm text-orange-700">hmotnost</div>
                            <div class="text-xs text-orange-600 mt-1">${(product.weight / 100).toFixed(1)} porc√≠</div>
                        </div>
                    </div>
                </div>
                
                <div>
                    <h2 class="text-xl font-semibold mb-4">üìä Nutriƒçn√≠ profil (100g)</h2>

                    <!-- Protein/Kcal Metric - NEW ‚≠ê -->
                    <div class="mb-4 p-4 rounded-lg ${
                        product.proteinDensity === 'excellent' ? 'bg-green-100 border-2 border-green-400' :
                        product.proteinDensity === 'high' ? 'bg-green-50 border-2 border-green-300' :
                        product.proteinDensity === 'good' ? 'bg-blue-50 border border-blue-300' :
                        product.proteinDensity === 'medium' ? 'bg-yellow-50 border border-yellow-300' :
                        'bg-gray-50 border border-gray-300'
                    }">
                        <div class="text-center">
                            <div class="text-sm font-medium text-gray-600 mb-1">Protein/kcal ratio</div>
                            <div class="text-3xl font-bold ${
                                product.proteinDensity === 'excellent' || product.proteinDensity === 'high' ? 'text-green-600' :
                                product.proteinDensity === 'good' ? 'text-blue-600' :
                                'text-gray-600'
                            }">${product.proteinPerKcal.toFixed(3)}</div>
                            <div class="text-xs mt-1 font-semibold ${
                                product.proteinDensity === 'excellent' ? 'text-green-700' :
                                product.proteinDensity === 'high' ? 'text-green-600' :
                                product.proteinDensity === 'good' ? 'text-blue-600' :
                                'text-gray-600'
                            }">
                                ${
                                    product.proteinDensity === 'excellent' ? 'üèÜ EXCELLENT - Lean protein king!' :
                                    product.proteinDensity === 'high' ? '‚≠ê HIGH - Great for cutting' :
                                    product.proteinDensity === 'good' ? '‚úì GOOD - Solid choice' :
                                    product.proteinDensity === 'medium' ? 'üìä MEDIUM' :
                                    'üìâ LOW - High in fat/carbs'
                                }
                            </div>
                        </div>
                    </div>

                    <!-- Makro slo≈æen√≠ -->
                    <div class="p-4 bg-white border rounded-lg mb-4">
                        <div class="space-y-3">
                            <div>
                                <div class="flex justify-between text-sm mb-1">
                                    <span class="font-medium">Protein</span>
                                    <span class="font-bold text-green-600">${product.proteinPer100g}g (${product.proteinPercent}%)</span>
                                </div>
                                <div class="w-full bg-gray-200 rounded-full h-2">
                                    <div class="bg-green-500 h-2 rounded-full" style="width: ${product.proteinPercent}%"></div>
                                </div>
                            </div>
                            <div>
                                <div class="flex justify-between text-sm mb-1">
                                    <span class="font-medium">Tuky</span>
                                    <span class="font-bold text-orange-600">${product.fatPer100g}g (${product.fatPercent}%)</span>
                                </div>
                                <div class="w-full bg-gray-200 rounded-full h-2">
                                    <div class="bg-orange-500 h-2 rounded-full" style="width: ${product.fatPercent}%"></div>
                                </div>
                            </div>
                            <div>
                                <div class="flex justify-between text-sm mb-1">
                                    <span class="font-medium">Sacharidy</span>
                                    <span class="font-bold text-blue-600">${product.carbsPer100g}g (${product.carbsPercent}%)</span>
                                </div>
                                <div class="w-full bg-gray-200 rounded-full h-2">
                                    <div class="bg-blue-500 h-2 rounded-full" style="width: ${product.carbsPercent}%"></div>
                                </div>
                            </div>
                            <div class="pt-2 border-t">
                                <div class="flex justify-between text-sm">
                                    <span class="font-medium">Kalorie celkem</span>
                                    <span class="font-bold">${product.caloriesPer100g} kcal</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Statistiky -->
                    <div class="p-4 bg-gray-50 rounded-lg">
                        <div class="space-y-2 text-sm">
                            <div class="flex justify-between">
                                <span>Celkem proteinu v balen√≠:</span>
                                <span class="font-bold text-primary">${product.totalProtein}g</span>
                            </div>
                            <div class="flex justify-between">
                                <span>Pozice v ≈æeb≈ô√≠ƒçku:</span>
                                <span class="font-bold text-primary">#${rankPosition} z ${productsData.length}</span>
                            </div>
                            <div class="flex justify-between">
                                <span>Protein na korunu:</span>
                                <span class="font-semibold">${(product.totalProtein / product.price).toFixed(2)}g/Kƒç</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mt-6 space-y-3">
                        <a href="/protein-hunter/kategorie/${product.category}.html" class="block w-full bg-primary text-white py-3 px-6 rounded-lg hover:bg-green-600 transition-colors text-center">
                            üîç Porovnat s podobn√Ωmi produkty
                        </a>
                        <a href="/protein-hunter/kalkulacka.html" class="block w-full bg-gray-600 text-white py-3 px-6 rounded-lg hover:bg-gray-700 transition-colors text-center">
                            üßÆ Spoƒç√≠tat denn√≠ pot≈ôebu
                        </a>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- FAQ Section -->
        <div class="bg-white rounded-lg shadow p-6 mb-8">
            <h2 class="text-2xl font-semibold mb-6">‚ùì ƒåasto kladen√© ot√°zky o ${product.name}</h2>
            <div class="space-y-4">
                <div class="border-l-4 border-primary pl-4">
                    <h3 class="font-semibold text-gray-900 mb-2">Kolik proteinu obsahuje ${product.name}?</h3>
                    <p class="text-gray-600">${product.name} obsahuje ${product.proteinPer100g}g proteinu na 100g produktu. V cel√©m balen√≠ (${product.weight}g) je celkem ${product.totalProtein}g proteinu.</p>
                </div>
                <div class="border-l-4 border-primary pl-4">
                    <h3 class="font-semibold text-gray-900 mb-2">Jak√° je cena za gram proteinu u ${product.name}?</h3>
                    <p class="text-gray-600">Cena za gram proteinu u ${product.name} je ${product.pricePerGramProtein.toFixed(2)} Kƒç. To je ${rankPosition <= 10 ? 'velmi dobr√°' : rankPosition <= 20 ? 'pr≈Ømƒõrn√°' : 'vy≈°≈°√≠'} cena ve srovn√°n√≠ s ostatn√≠mi produkty.</p>
                </div>
                <div class="border-l-4 border-primary pl-4">
                    <h3 class="font-semibold text-gray-900 mb-2">Je ${product.name} vhodn√Ω pro fitness?</h3>
                    <p class="text-gray-600">Ano, ${product.name} s ${product.proteinPer100g}g proteinu na 100g je ${product.proteinPer100g >= 20 ? 'vynikaj√≠c√≠m' : product.proteinPer100g >= 15 ? 'dobr√Ωm' : 'z√°kladn√≠m'} zdrojem b√≠lkovin pro sportovce a fitness.</p>
                </div>
            </div>
        </div>

        ${productComparisons.length > 0 ? `
        <div class="bg-white rounded-lg shadow p-6 mb-8">
            <h2 class="text-xl font-semibold mb-4">‚öñÔ∏è Porovn√°n√≠ s jin√Ωmi produkty</h2>
            <p class="text-gray-600 mb-4">Pod√≠vejte se, jak si ${product.name} vede v p≈ô√≠m√©m souboji s konkurenc√≠:</p>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                ${productComparisons.map(comp => {
                    const other = comp.otherProduct;
                    const isBetter = product.pricePerGramProtein < other.pricePerGramProtein;
                    return `
                    <a href="/protein-hunter/porovnani/${comp.comparisonSlug}.html" class="border rounded-lg p-4 hover:shadow-lg transition-shadow ${isBetter ? 'border-green-300 bg-green-50' : 'border-gray-200'}">
                        <div class="flex items-center justify-between mb-3">
                            <div class="font-semibold text-gray-900">
                                ${product.name}
                            </div>
                            <div class="text-2xl">VS</div>
                            <div class="font-semibold text-gray-900">
                                ${other.name}
                            </div>
                        </div>
                        <div class="grid grid-cols-2 gap-4 text-sm">
                            <div class="text-center">
                                <div class="text-2xl font-bold ${isBetter ? 'text-green-600' : 'text-gray-600'}">${product.pricePerGramProtein.toFixed(2)} Kƒç</div>
                                <div class="text-xs text-gray-600">za 1g proteinu</div>
                            </div>
                            <div class="text-center">
                                <div class="text-2xl font-bold ${!isBetter ? 'text-green-600' : 'text-gray-600'}">${other.pricePerGramProtein.toFixed(2)} Kƒç</div>
                                <div class="text-xs text-gray-600">za 1g proteinu</div>
                            </div>
                        </div>
                        <div class="mt-3 text-center">
                            <span class="inline-block bg-primary text-white px-3 py-1 rounded-full text-xs">
                                ${isBetter ? 'üèÜ ' + product.name + ' v√≠tƒõz√≠!' : 'üëÄ Detailn√≠ srovn√°n√≠ ‚Üí'}
                            </span>
                        </div>
                    </a>
                `;
                }).join('')}
            </div>
        </div>
        ` : ''}

        ${similarProducts.length > 0 ? `
        <div class="bg-white rounded-lg shadow p-6">
            <h2 class="text-xl font-semibold mb-4">üîó Podobn√© produkty v kategorii "${categoryNames[product.category]}"</h2>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                ${similarProducts.map(similar => `
                    <div class="border rounded-lg p-4 hover:shadow-md transition-shadow">
                        <h3 class="font-semibold text-primary mb-2">
                            <a href="/protein-hunter/produkty/${similar.slug}.html" class="hover:underline">${similar.name}</a>
                        </h3>
                        <div class="text-sm text-gray-600 space-y-1">
                            <div>Protein: ${similar.proteinPer100g}g/100g</div>
                            <div>Cena: ${similar.price} Kƒç</div>
                            <div class="font-semibold text-primary">${similar.pricePerGramProtein.toFixed(2)} Kƒç/g</div>
                        </div>
                    </div>
                `).join('')}
            </div>
        </div>
        ` : ''}
    </main>

    ${getFooter()}
</body>
</html>`;
}

// Generate product pages
console.log('Generating product pages...');
if (!fs.existsSync('produkty')) {
    fs.mkdirSync('produkty', { recursive: true });
}

productsData.forEach(product => {
    const filename = `produkty/${product.slug}.html`;
    const html = generateProductPage(product);
    fs.writeFileSync(filename, html);
    console.log(`Generated: ${filename}`);
});

// Generate products index page
const productsIndexHtml = `${getHtmlHead(
    `V≈°echny proteinov√© potraviny - datab√°ze ${productsData.length} produkt≈Ø s cenami`,
    'Kompletn√≠ datab√°ze proteinov√Ωch potravin s porovn√°n√≠m cen za gram proteinu. Ml√©ƒçn√© v√Ωrobky, maso, ryby, lu≈°tƒõniny a dopl≈àky stravy.'
)}
    <meta name="keywords" content="proteinov√© potraviny, datab√°ze potravin, cena proteinu, nejlevnƒõj≈°√≠ protein">
</head>
<body class="bg-gray-50">
    ${getNavigation()}

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900 mb-4">V≈°echny proteinov√© potraviny</h1>
            <p class="text-xl text-gray-600">
                Datab√°ze ${productsData.length} produkt≈Ø se≈ôazen√Ωch podle nejlep≈°√≠ho pomƒõru cena/protein. 
                Najdƒõte nejlevnƒõj≈°√≠ zdroje b√≠lkovin pro va≈°i stravu.
            </p>
        </div>
        
        <!-- All products list -->
        <div class="bg-white rounded-lg shadow">
            <div class="px-6 py-4 border-b">
                <h2 class="text-xl font-semibold">üìä V≈°echny produkty se≈ôazen√© podle ceny</h2>
            </div>
            <div class="divide-y divide-gray-100">
                ${productsData
                    .sort((a, b) => a.pricePerGramProtein - b.pricePerGramProtein)
                    .map((product, index) => `
                        <div class="p-4 hover:bg-gray-50 transition-colors">
                            <a href="/protein-hunter/produkty/${product.slug}.html" class="block">
                                <div class="flex items-center justify-between">
                                    <div class="flex items-center gap-4">
                                        <div class="text-center">
                                            <div class="text-xl">${index < 3 ? ['üèÜ', 'ü•à', 'ü•â'][index] : `#${index + 1}`}</div>
                                        </div>
                                        <div>
                                            <h3 class="font-semibold text-primary hover:underline">${product.name}</h3>
                                            <div class="text-sm text-gray-600">
                                                <span class="bg-gray-100 px-2 py-1 rounded text-xs">${categoryNames[product.category]}</span>
                                                <span class="ml-2">${product.price} Kƒç ‚Ä¢ ${product.weight >= 1000 ? (product.weight/1000).toFixed(1) + ' kg' : product.weight + ' g'}</span>
                                                <span class="mx-1">‚Ä¢</span>
                                                <span>${product.proteinPer100g}g protein/100g</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="text-right">
                                        <div class="text-2xl font-bold text-primary">${product.pricePerGramProtein.toFixed(2)} Kƒç</div>
                                        <div class="text-xs text-gray-500">za 1g proteinu</div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    `).join('')}
            </div>
        </div>
    </main>

    ${getFooter()}
</body>
</html>`;

fs.writeFileSync('produkty/index.html', productsIndexHtml);
console.log('Generated: produkty/index.html');

// Generate Lean Proteins ranking page
const leanProteinsHtml = `${getHtmlHead(
    'Lean Proteiny - Nejlep≈°√≠ pomƒõr protein/kalorie | Protein Hunter',
    `Datab√°ze ${productsData.length} potravin se≈ôazen√Ωch podle protein/kcal ratio. Najdƒõte nejlep≈°√≠ lean proteiny pro hubnouc√≠ a definici - vysok√Ω protein, n√≠zk√© kalorie.`
)}
</head>
<body class="bg-gray-50">
    ${getNavigation()}

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900 mb-4">üèÜ Lean Proteiny - Protein/Kalorie Ranking</h1>
            <p class="text-xl text-gray-600 mb-4">
                Datab√°ze ${productsData.length} potravin se≈ôazen√Ωch podle <strong>protein/kcal ratio</strong>.
                ƒå√≠m vy≈°≈°√≠ ƒç√≠slo, t√≠m v√≠ce proteinu dostanete na kalorie - ide√°ln√≠ pro cutting, hubnut√≠ a definici.
            </p>
            <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
                <h2 class="font-semibold text-blue-900 mb-2">üí° Co je Lean Protein?</h2>
                <p class="text-blue-800 text-sm mb-2">
                    <strong>Lean protein</strong> = potravina s vysok√Ωm obsahem proteinu, ale n√≠zk√Ωmi kaloriemi.
                    Dokonal√© pro kalorick√Ω deficit - najed√≠te se, naberete sval, ale nep≈ôiberete tuk.
                </p>
                <div class="grid grid-cols-2 md:grid-cols-5 gap-2 mt-3 text-xs">
                    <div class="bg-green-100 border border-green-300 rounded p-2">
                        <div class="font-bold text-green-800">üèÜ EXCELLENT</div>
                        <div class="text-green-700">‚â•0.15 protein/kcal</div>
                    </div>
                    <div class="bg-green-50 border border-green-200 rounded p-2">
                        <div class="font-bold text-green-700">‚≠ê HIGH</div>
                        <div class="text-green-600">‚â•0.12 protein/kcal</div>
                    </div>
                    <div class="bg-blue-50 border border-blue-200 rounded p-2">
                        <div class="font-bold text-blue-700">‚úì GOOD</div>
                        <div class="text-blue-600">‚â•0.08 protein/kcal</div>
                    </div>
                    <div class="bg-yellow-50 border border-yellow-200 rounded p-2">
                        <div class="font-bold text-yellow-700">üìä MEDIUM</div>
                        <div class="text-yellow-600">‚â•0.05 protein/kcal</div>
                    </div>
                    <div class="bg-gray-50 border border-gray-200 rounded p-2">
                        <div class="font-bold text-gray-700">üìâ LOW</div>
                        <div class="text-gray-600">&lt;0.05 protein/kcal</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Filter buttons -->
        <div class="mb-6 flex gap-2 flex-wrap">
            <button onclick="filterByDensity('all')" class="filter-btn px-4 py-2 bg-primary text-white rounded-lg font-semibold">V≈°echny</button>
            <button onclick="filterByDensity('excellent')" class="filter-btn px-4 py-2 bg-green-100 text-green-800 rounded-lg border border-green-300">üèÜ Excellent</button>
            <button onclick="filterByDensity('high')" class="filter-btn px-4 py-2 bg-green-50 text-green-700 rounded-lg border border-green-200">‚≠ê High</button>
            <button onclick="filterByDensity('good')" class="filter-btn px-4 py-2 bg-blue-50 text-blue-700 rounded-lg border border-blue-200">‚úì Good</button>
            <button onclick="filterByDensity('medium')" class="filter-btn px-4 py-2 bg-yellow-50 text-yellow-700 rounded-lg border border-yellow-200">üìä Medium</button>
            <button onclick="filterByDensity('low')" class="filter-btn px-4 py-2 bg-gray-50 text-gray-700 rounded-lg border border-gray-200">üìâ Low</button>
        </div>

        <!-- Lean proteins ranking -->
        <div class="bg-white rounded-lg shadow">
            <div class="px-6 py-4 border-b">
                <h2 class="text-xl font-semibold">üìä Ranking podle Protein/Kcal Ratio</h2>
            </div>
            <div id="products-list" class="divide-y divide-gray-100">
                ${productsData
                    .sort((a, b) => b.proteinPerKcal - a.proteinPerKcal)
                    .map((product, index) => {
                        const densityClass =
                            product.proteinDensity === 'excellent' ? 'bg-green-50 border-l-4 border-green-400' :
                            product.proteinDensity === 'high' ? 'bg-green-50/50 border-l-4 border-green-300' :
                            product.proteinDensity === 'good' ? 'bg-blue-50/50 border-l-4 border-blue-300' :
                            product.proteinDensity === 'medium' ? 'bg-yellow-50/50 border-l-4 border-yellow-300' :
                            'bg-gray-50/50 border-l-4 border-gray-300';

                        const densityLabel =
                            product.proteinDensity === 'excellent' ? 'üèÜ EXCELLENT' :
                            product.proteinDensity === 'high' ? '‚≠ê HIGH' :
                            product.proteinDensity === 'good' ? '‚úì GOOD' :
                            product.proteinDensity === 'medium' ? 'üìä MEDIUM' :
                            'üìâ LOW';

                        return `
                        <div class="product-item p-4 hover:bg-gray-50 transition-colors ${densityClass}" data-density="${product.proteinDensity}">
                            <a href="/protein-hunter/produkty/${product.slug}.html" class="block">
                                <div class="flex items-center justify-between">
                                    <div class="flex items-center gap-4">
                                        <div class="text-center min-w-[50px]">
                                            <div class="text-xl">${index < 3 ? ['ü•á', 'ü•à', 'ü•â'][index] : `#${index + 1}`}</div>
                                        </div>
                                        <div>
                                            <h3 class="font-semibold text-primary hover:underline">${product.name}</h3>
                                            <div class="text-sm text-gray-600 mt-1">
                                                <span class="bg-gray-100 px-2 py-1 rounded text-xs">${categoryNames[product.category]}</span>
                                                <span class="ml-2">${product.proteinPer100g}g protein</span>
                                                <span class="mx-1">‚Ä¢</span>
                                                <span>${product.caloriesPer100g} kcal/100g</span>
                                            </div>
                                            <div class="mt-1">
                                                <span class="text-xs font-semibold ${
                                                    product.proteinDensity === 'excellent' ? 'text-green-700' :
                                                    product.proteinDensity === 'high' ? 'text-green-600' :
                                                    product.proteinDensity === 'good' ? 'text-blue-600' :
                                                    product.proteinDensity === 'medium' ? 'text-yellow-700' :
                                                    'text-gray-600'
                                                }">${densityLabel}</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="text-right">
                                        <div class="text-3xl font-bold ${
                                            product.proteinDensity === 'excellent' ? 'text-green-600' :
                                            product.proteinDensity === 'high' ? 'text-green-500' :
                                            product.proteinDensity === 'good' ? 'text-blue-500' :
                                            product.proteinDensity === 'medium' ? 'text-yellow-600' :
                                            'text-gray-500'
                                        }">${product.proteinPerKcal.toFixed(3)}</div>
                                        <div class="text-xs text-gray-500">protein/kcal</div>
                                        <div class="text-xs text-gray-400 mt-1">${product.pricePerGramProtein.toFixed(2)} Kƒç/g protein</div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    `;
                    }).join('')}
            </div>
        </div>

        <!-- Info section -->
        <div class="mt-8 bg-white rounded-lg shadow p-6">
            <h2 class="text-2xl font-bold mb-4">‚ùì Proƒç je Protein/Kcal ratio d≈Øle≈æit√©?</h2>
            <div class="prose max-w-none">
                <p class="mb-3">
                    P≈ôi <strong>hubnouc√≠ dietƒõ (cutting)</strong> pot≈ôebujete b√Ωt v <strong>kalorick√©m deficitu</strong>,
                    ale z√°rove≈à mus√≠te dod√°vat tƒõlu dostatek <strong>proteinu pro udr≈æen√≠ svalov√© hmoty</strong>.
                </p>
                <p class="mb-3">
                    <strong>Lean proteiny</strong> (s vysok√Ωm protein/kcal ratio) v√°m umo≈æn√≠:
                </p>
                <ul class="list-disc pl-6 mb-3 space-y-1">
                    <li>B√Ωt syti p≈ôi n√≠zk√©m kalorick√© p≈ô√≠jmu</li>
                    <li>Udr≈æet nebo nabrat svaly i v deficitu</li>
                    <li>M√≠t energii a nec√≠tit se hladov√≠</li>
                    <li>Efektivnƒõ budovat definici a spalovat tuk</li>
                </ul>
                <h3 class="text-xl font-bold mt-6 mb-3">P≈ô√≠klady:</h3>
                <div class="grid md:grid-cols-2 gap-4">
                    <div class="border border-green-300 bg-green-50 rounded-lg p-4">
                        <div class="font-bold text-green-800 mb-2">‚úÖ DOBR√Å VOLBA - Treska (cod)</div>
                        <div class="text-sm">
                            <div>18.2g protein / 82 kcal = <strong>0.222 ratio</strong></div>
                            <div class="text-green-700 mt-1">‚Üí Hodnƒõ proteinu, m√°lo kalori√≠ = ide√°ln√≠ pro cutting!</div>
                        </div>
                    </div>
                    <div class="border border-red-300 bg-red-50 rounded-lg p-4">
                        <div class="font-bold text-red-800 mb-2">‚ùå ≈†PATN√Å VOLBA - Mandle (almonds)</div>
                        <div class="text-sm">
                            <div>21.2g protein / 579 kcal = <strong>0.037 ratio</strong></div>
                            <div class="text-red-700 mt-1">‚Üí Hodnƒõ kalori√≠ kv≈Øli tuk≈Øm, n√°roƒçn√© na deficit!</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    ${getFooter()}

    <script>
        function filterByDensity(density) {
            const items = document.querySelectorAll('.product-item');
            items.forEach(item => {
                if (density === 'all' || item.dataset.density === density) {
                    item.style.display = 'block';
                } else {
                    item.style.display = 'none';
                }
            });

            // Update button styles
            document.querySelectorAll('.filter-btn').forEach(btn => {
                btn.classList.remove('bg-primary', 'text-white');
            });
            event.target.classList.add('bg-primary', 'text-white');
        }
    </script>
</body>
</html>`;

if (!fs.existsSync('lean-proteins')) {
    fs.mkdirSync('lean-proteins');
}
fs.writeFileSync('lean-proteins/index.html', leanProteinsHtml);
console.log('Generated: lean-proteins/index.html');

// Generate recepty (recipes) pages
console.log('Generating recipes pages...');
if (!fs.existsSync('recepty')) {
    fs.mkdirSync('recepty', { recursive: true });
}

// Recipes database
const recipesData = [
    // ‚úÖ P≈Øvodn√≠ recepty
    {
        id: 1,
        name: "Proteinov√Ω tvarohov√Ω kol√°ƒç",
        slug: "proteinovy-tvarohovy-kolac",
        category: "breakfast",
        protein: "28g",
        description: "V√Ω≈æivn√Ω tvarohov√Ω kol√°ƒç s vysok√Ωm obsahem proteinu. Ide√°ln√≠ pro sn√≠dani nebo svaƒçinu.",
        ingredients: ["500g tvaroh", "3 vejce", "50g protein powder", "2 l≈æ√≠ce medu"],
        difficulty: "Snadn√°",
        time: "45 minut"
    },
    {
        id: 2,
        name: "Ku≈ôec√≠ sal√°t s quinoou",
        slug: "kureci-salat-s-quinoou", 
        category: "lunch",
        protein: "35g",
        description: "Zdrav√Ω obƒõd pln√Ω proteinu s quinoou a ku≈ôec√≠mi prsy.",
        ingredients: ["200g ku≈ôec√≠ prsa", "100g quinoa", "zelenina", "olivov√Ω olej"],
        difficulty: "St≈ôedn√≠",
        time: "30 minut"
    },
    {
        id: 3,
        name: "Lososov√© fil√© s brokolic√≠",
        slug: "lososove-file-s-brokoli",
        category: "dinner",
        protein: "42g",
        description: "V√Ω≈æivn√° veƒçe≈ôe s vysok√Ωm obsahem omega-3 mastn√Ωch kyselin a proteinu.",
        ingredients: ["200g losos", "300g brokolice", "citr√≥n", "olivov√Ω olej"],
        difficulty: "Snadn√°",
        time: "25 minut"
    },
    {
        id: 4,
        name: "Proteinov√Ω shake s ban√°nem",
        slug: "proteinovy-shake-s-bananem",
        category: "beverages",
        protein: "25g",
        description: "Rychl√Ω proteinov√Ω n√°poj po tr√©ninku pro regeneraci sval≈Ø.",
        ingredients: ["30g protein powder", "1 ban√°n", "250ml ml√©ko", "led"],
        difficulty: "Velmi snadn√°",
        time: "5 minut"
    },
    
    // üåÖ Nov√© sn√≠danƒõ (5-14)
    {
        id: 5,
        name: "Nad√Ωchan√© tvarohov√© l√≠vance s ovocem",
        slug: "nadychane-tvarohove-livance-s-ovocem",
        category: "breakfast",
        protein: "22g",
        description: "Nad√Ωchan√© l√≠vance s tvarohem a ƒçerstv√Ωm ovocem. Perfektn√≠ proteinov√° sn√≠danƒõ.",
        ingredients: ["250g tvaroh", "2 vejce", "3 l≈æ√≠ce ovesn√Ωch vloƒçek", "1 ban√°n", "100g bor≈Øvek"],
        difficulty: "Snadn√°",
        time: "15 minut"
    },
    {
        id: 6,
        name: "Sn√≠da≈àov√° proteinov√° cookie s ovocem",
        slug: "snidankova-proteinova-cookie-s-ovocem",
        category: "breakfast",
        protein: "18g",
        description: "Zdrav√° proteinov√° su≈°enka s ovocem a o≈ôechy. Ide√°ln√≠ sn√≠danƒõ na cesty.",
        ingredients: ["40g protein powder", "50g mlet√Ωch mandl√≠", "30g rozinek", "2 l≈æ√≠ce medu", "2 l≈æ√≠ce kokosov√©ho oleje"],
        difficulty: "Snadn√°",
        time: "20 minut"
    },
    {
        id: 7,
        name: "≈òeck√Ω jogurt s o≈ôechy a medem",
        slug: "recky-jogurt-s-orechy-a-medem",
        category: "breakfast",
        protein: "20g",
        description: "Jednoduch√° a rychl√° proteinov√° sn√≠danƒõ s ≈ôeck√Ωm jogurtem a o≈ôechy.",
        ingredients: ["200g ≈ôeck√Ω jogurt", "30g vla≈°sk√Ωch o≈ôech≈Ø", "1 l≈æ√≠ce medu", "1 l≈æ√≠ce chia sem√≠nek"],
        difficulty: "Velmi snadn√°",
        time: "5 minut"
    },
    {
        id: 8,
        name: "Proteinov√© ovesn√© vloƒçky overnight",
        slug: "proteinove-ovesne-vlocky-overnight",
        category: "breakfast",
        protein: "25g",
        description: "Overnight oats s proteinem p≈ôipraven√© veƒçer. R√°no jen vyndejte z lednice.",
        ingredients: ["50g ovesn√Ωch vloƒçek", "30g protein powder", "200ml ml√©ka", "1 ban√°n"],
        difficulty: "Velmi snadn√°",
        time: "5 minut"
    },
    {
        id: 9,
        name: "Scrambled eggs s avok√°dem",
        slug: "scrambled-eggs-s-avokadem",
        category: "breakfast",
        protein: "24g",
        description: "Klasick√° m√≠chan√° vaj√≠ƒçka s avok√°dem a ƒçerstvou zeleninou.",
        ingredients: ["3 vejce", "1/2 avok√°da", "100g cherry rajƒçat", "50g ƒçerstv√©ho ≈°pen√°tu"],
        difficulty: "Snadn√°",
        time: "10 minut"
    },
    {
        id: 10,
        name: "Proteinov√Ω smoothie bowl",
        slug: "proteinovy-smoothie-bowl",
        category: "breakfast",
        protein: "30g",
        description: "Hust√Ω smoothie bowl s proteinem a ƒçerstv√Ωm ovocem. Instagramov√° sn√≠danƒõ.",
        ingredients: ["40g protein powder", "1 ban√°n", "100g jahod", "30g granoly"],
        difficulty: "Snadn√°",
        time: "10 minut"
    },
    {
        id: 11,
        name: "Cottage cheese s ovocem",
        slug: "cottage-cheese-s-ovocem",
        category: "breakfast",
        protein: "22g",
        description: "Jednoduch√Ω cottage cheese s ƒçerstv√Ωm ovocem a o≈ôechy.",
        ingredients: ["150g cottage cheese", "1 broskev", "1 l≈æ√≠ce medu", "20g vla≈°sk√Ωch o≈ôech≈Ø"],
        difficulty: "Velmi snadn√°",
        time: "5 minut"
    },
    {
        id: 12,
        name: "Vaj√≠ƒçkov√° omeleta se ≈°unkou",
        slug: "vajickova-omeleta-se-sunkou",
        category: "breakfast",
        protein: "26g",
        description: "Klasick√° omeleta se ≈°unkou, s√Ωrem a zeleninou.",
        ingredients: ["3 vejce", "50g ≈°unky", "30g s√Ωra", "1/2 papriky", "1/4 cibule"],
        difficulty: "Snadn√°",
        time: "12 minut"
    },
    {
        id: 13,
        name: "Proteinov√© palaƒçinky",
        slug: "proteinove-palacinky",
        category: "breakfast",
        protein: "28g",
        description: "Fitness palaƒçinky s vysok√Ωm obsahem proteinu. Bez mouky a cukru.",
        ingredients: ["2 vejce", "100g tvarohu", "30g ovesn√Ωch vloƒçek", "20g protein powder"],
        difficulty: "St≈ôedn√≠",
        time: "20 minut"
    },
    {
        id: 14,
        name: "Quinoa breakfast bowl",
        slug: "quinoa-breakfast-bowl",
        category: "breakfast",
        protein: "21g",
        description: "V√Ω≈æivn√Ω quinoa bowl s jogurtem, ovocem a o≈ôechy.",
        ingredients: ["60g quinoa", "100g ≈ôeck√©ho jogurtu", "1 jablko", "30g mandl√≠"],
        difficulty: "St≈ôedn√≠",
        time: "15 minut"
    },
    
    // ü•§ Nov√© n√°poje (15-19)
    {
        id: 15,
        name: "ƒåokol√°dov√Ω protein smoothie",
        slug: "cokoladovy-protein-smoothie",
        category: "beverages",
        protein: "28g",
        description: "Lahodn√Ω ƒçokol√°dov√Ω smoothie s proteinem. Chu≈• jako milkshake.",
        ingredients: ["40g ƒçokol√°dov√©ho proteinu", "1 ban√°n", "250ml mandlov√©ho ml√©ka", "1 l≈æ√≠ce kakaa"],
        difficulty: "Velmi snadn√°",
        time: "5 minut"
    },
    {
        id: 16,
        name: "Green goddess smoothie",
        slug: "green-goddess-smoothie",
        category: "beverages",
        protein: "24g",
        description: "Zelen√Ω smoothie pln√Ω vitam√≠n≈Ø a proteinu. Detox a s√≠la v jednom.",
        ingredients: ["50g ≈°pen√°tu", "30g vanilkov√©ho proteinu", "100g anan√°su", "200ml kokosov√© vody"],
        difficulty: "Snadn√°",
        time: "8 minut"
    },
    {
        id: 17,
        name: "Vanilla protein latte",
        slug: "vanilla-protein-latte",
        category: "beverages",
        protein: "22g",
        description: "Proteinov√© k√°vov√© latte s vanilkovou chut√≠. Energii na cel√© dopoledne.",
        ingredients: ["30g vanilkov√©ho proteinu", "200ml k√°vy", "100ml mandlov√©ho ml√©ka", "≈°petka sko≈ôice"],
        difficulty: "Snadn√°",
        time: "10 minut"
    },
    {
        id: 18,
        name: "Berry protein blast",
        slug: "berry-protein-blast",
        category: "beverages",
        protein: "26g",
        description: "Smoothie s mixem bobul√≠ a proteinem. Antioxidanty a s√≠la.",
        ingredients: ["150g mix bobulovin", "35g vanilkov√©ho proteinu", "150ml ≈ôeck√©ho jogurtu"],
        difficulty: "Velmi snadn√°",
        time: "6 minut"
    },
    {
        id: 19,
        name: "Tropical protein paradise",
        slug: "tropical-protein-paradise",
        category: "beverages",
        protein: "25g",
        description: "Tropick√Ω smoothie s mangem, ananasem a proteinem. Dovolen√° v sklenici.",
        ingredients: ["100g manga", "100g anan√°su", "30g vanilkov√©ho proteinu", "150ml kokosov√©ho ml√©ka"],
        difficulty: "Snadn√°",
        time: "7 minut"
    },

    // üåÖ Sn√≠danƒõ pokraƒçov√°n√≠ (20-25)
    {
        id: 20,
        name: "Chia pudding s proteinem",
        slug: "chia-pudding-s-proteinem",
        category: "breakfast",
        protein: "19g",
        description: "Chia pudink p≈ôipraven√Ω p≈ôes noc s proteinem. Zdrav√° a v√Ω≈æivn√° sn√≠danƒõ.",
        ingredients: ["3 l≈æ√≠ce chia sem√≠nek", "20g protein powder", "200ml mandlov√©ho ml√©ka", "1 l≈æ√≠ce medu"],
        difficulty: "Velmi snadn√°",
        time: "5 minut"
    },
    {
        id: 21,
        name: "Tofu scramble",
        slug: "tofu-scramble",
        category: "breakfast",
        protein: "23g",
        description: "Vegansk√° alternativa m√≠chan√Ωch vajec z tofu. Stejn√° chu≈•, ≈æ√°dn√° vejce.",
        ingredients: ["200g tofu", "50g ≈°pen√°tu", "100g rajƒçat", "1/2 l≈æiƒçky kurkumy", "1/4 cibule"],
        difficulty: "St≈ôedn√≠",
        time: "15 minut"
    },
    {
        id: 22,
        name: "Proteinov√© muffiny",
        slug: "proteinove-muffiny",
        category: "breakfast",
        protein: "16g",
        description: "Fitness muffiny s proteinem a ban√°nem. Sn√≠danƒõ nebo svaƒçina na cesty.",
        ingredients: ["40g protein powder", "2 ban√°ny", "2 vejce", "50g ovesn√© mouky"],
        difficulty: "Snadn√°",
        time: "25 minut"
    },
    {
        id: 23,
        name: "Smoked salmon bagel",
        slug: "smoked-salmon-bagel",
        category: "breakfast",
        protein: "27g",
        description: "Luxusn√≠ sn√≠danƒõ s uzen√Ωm lososem a vejcem. V√≠kendov√Ω favorit.",
        ingredients: ["100g uzen√Ω losos", "50g cream cheese", "1 vejce", "30g rukoly", "1 bagel"],
        difficulty: "Snadn√°",
        time: "8 minut"
    },
    {
        id: 24,
        name: "Proteinov√Ω pudink",
        slug: "proteinovy-pudink",
        category: "breakfast",
        protein: "24g",
        description: "Hust√Ω proteinov√Ω pudink s chia a kakaem. ƒåokol√°dov√° sn√≠danƒõ bez v√Ωƒçitek.",
        ingredients: ["30g protein powder", "2 l≈æ√≠ce chia", "150g jogurtu", "1 l≈æ√≠ce kakaa"],
        difficulty: "Snadn√°",
        time: "10 minut"
    },
    {
        id: 25,
        name: "Eggs Benedict fitness verze",
        slug: "eggs-benedict-fitness-verze",
        category: "breakfast",
        protein: "29g",
        description: "Fitness verze klasick√Ωch Eggs Benedict s ku≈ôec√≠ ≈°unkou a avok√°dem.",
        ingredients: ["2 vejce", "50g ku≈ôec√≠ ≈°unky", "100g ≈°pen√°tu", "1/2 avok√°da"],
        difficulty: "St≈ôedn√≠",
        time: "20 minut"
    },

    // üçΩÔ∏è Obƒõdy (26-50)
    {
        id: 26,
        name: "Zapeƒçen√© tƒõstoviny s trhan√Ωm ku≈ôec√≠m masem",
        slug: "zapecene-testoviny-s-trhanym-kurecim-masem",
        category: "lunch",
        protein: "32g",
        description: "Zapeƒçen√© tƒõstoviny s trhan√Ωm ku≈ôec√≠m masem a s√Ωrem. Comfort food pln√Ω proteinu.",
        ingredients: ["150g ku≈ôec√≠ho masa", "100g tƒõstovin", "50g s√Ωra", "200g rajƒçat", "bylinky"],
        difficulty: "St≈ôedn√≠",
        time: "65 minut"
    },
    {
        id: 27,
        name: "Losos s bat√°ty a brokolic√≠",
        slug: "losos-s-bataty-a-brokoli",
        category: "lunch",
        protein: "38g",
        description: "Peƒçen√Ω losos s bat√°ty a brokolic√≠. Omega-3 a vitam√≠ny v jednom j√≠dle.",
        ingredients: ["200g losos", "150g bat√°t≈Ø", "200g brokolice", "citron", "olivov√Ω olej"],
        difficulty: "St≈ôedn√≠",
        time: "35 minut"
    },
    {
        id: 28,
        name: "Fitness wrap s tu≈à√°kem",
        slug: "fitness-wrap-s-tunakem",
        category: "lunch",
        protein: "28g",
        description: "Rychl√Ω wrap s tu≈à√°kem a zeleninou. Obƒõd na cesty za 12 minut.",
        ingredients: ["1 plechovka tu≈à√°ka", "1 tortilla", "1/2 avok√°da", "100g rajƒçat", "sal√°t"],
        difficulty: "Velmi snadn√°",
        time: "12 minut"
    },
    {
        id: 29,
        name: "Ku≈ôec√≠ curry s r√Ω≈æ√≠",
        slug: "kureci-curry-s-ryzi",
        category: "lunch",
        protein: "36g",
        description: "Aromatick√© ku≈ôec√≠ curry s r√Ω≈æ√≠ a kokosov√Ωm ml√©kem.",
        ingredients: ["200g ku≈ôec√≠ho masa", "100g r√Ω≈æe", "150ml kokosml√©ka", "2 l≈æ√≠ce kari ko≈ôen√≠"],
        difficulty: "St≈ôedn√≠",
        time: "40 minut"
    },
    {
        id: 30,
        name: "Tofu bowl s vejcem",
        slug: "tofu-bowl-s-vejcem",
        category: "lunch",
        protein: "30g",
        description: "Asijsk√Ω bowl s tofu, vejcem a zeleninou. Kompletn√≠ obƒõd v jedn√© misce.",
        ingredients: ["150g tofu", "2 vejce", "100g r√Ω≈æe", "mix zeleniny", "1 l≈æ√≠ce sezamu"],
        difficulty: "St≈ôedn√≠",
        time: "25 minut"
    },
    {
        id: 31,
        name: "ƒåoƒçkov√° pol√©vka s klob√°sou",
        slug: "cockova-polevka-s-klobasou",
        category: "lunch",
        protein: "24g",
        description: "Vydatn√° ƒçoƒçkov√° pol√©vka s klob√°sou. Klasika pln√° proteinu.",
        ingredients: ["100g ƒçerven√© ƒçoƒçky", "100g klob√°sy", "2 mrkve", "1 celer"],
        difficulty: "Snadn√°",
        time: "45 minut"
    },
    {
        id: 32,
        name: "Grilovan√° ku≈ôec√≠ prsa s quinoou",
        slug: "grilovana-kureci-prsa-s-quinoou",
        category: "lunch",
        protein: "42g",
        description: "≈†≈•avnat√° grilovan√° ku≈ôec√≠ prsa s quinoou a zeleninou.",
        ingredients: ["200g ku≈ôec√≠ch prsou", "80g quinoy", "mix zeleniny", "bylinkov√Ω olej"],
        difficulty: "St≈ôedn√≠",
        time: "30 minut"
    },
    {
        id: 33,
        name: "Poke bowl s tu≈à√°kem",
        slug: "poke-bowl-s-tunakem",
        category: "lunch",
        protein: "34g",
        description: "Havajsk√Ω poke bowl s ƒçerstv√Ωm tu≈à√°kem a avok√°dem.",
        ingredients: ["150g tu≈à√°ka", "100g r√Ω≈æe", "1/2 avok√°da", "okurek", "nori ≈ôasy"],
        difficulty: "St≈ôedn√≠",
        time: "20 minut"
    },
    {
        id: 34,
        name: "Ku≈ôec√≠ souvlaki s ≈ôeck√Ωm sal√°tem",
        slug: "kureci-souvlaki-s-reckym-salatem",
        category: "lunch",
        protein: "39g",
        description: "≈òeck√© ku≈ôec√≠ ≈°p√≠zy s ƒçerstv√Ωm sal√°tem a feta s√Ωrem.",
        ingredients: ["200g ku≈ôec√≠ho masa", "50g feta s√Ωru", "olivy", "rajƒçata", "okurek"],
        difficulty: "St≈ôedn√≠",
        time: "30 minut"
    },
    {
        id: 35,
        name: "Fitness burger s bat√°tov√Ωmi hranolky",
        slug: "fitness-burger-s-batatovymi-hranolky",
        category: "lunch",
        protein: "33g",
        description: "Dom√°c√≠ fitness burger s peƒçen√Ωmi bat√°tov√Ωmi hranolky.",
        ingredients: ["150g mlet√©ho masa", "150g bat√°t≈Ø", "sal√°t", "rajƒçata", "celozrnn√° ≈æemle"],
        difficulty: "St≈ôedn√≠",
        time: "25 minut"
    },

    // üåô Veƒçe≈ôe (36-55)
    {
        id: 36,
        name: "≈†pen√°tov√© noky s balk√°nsk√Ωm s√Ωrem",
        slug: "spenatove-noky-s-balkanskym-syrem",
        category: "dinner",
        protein: "24g",
        description: "≈†pen√°tov√© noky s balk√°nsk√Ωm s√Ωrem a ƒçesnekem. Rychl√° veƒçe≈ôe za 15 minut.",
        ingredients: ["200g ≈°pen√°tu", "150g nok≈Ø", "80g balk√°nsk√©ho s√Ωra", "2 strou≈æky ƒçesneku"],
        difficulty: "Snadn√°",
        time: "15 minut"
    },
    {
        id: 37,
        name: "Tofu kuliƒçky na kari s r√Ω≈æ√≠",
        slug: "tofu-kulicky-na-kari-s-ryzi",
        category: "dinner",
        protein: "28g",
        description: "Vegansk√© tofu kuliƒçky v kari om√°ƒçce s jasm√≠novou r√Ω≈æ√≠.",
        ingredients: ["200g tofu", "100g r√Ω≈æe", "2 l≈æ√≠ce kari", "150ml kokosml√©ka"],
        difficulty: "St≈ôedn√≠",
        time: "50 minut"
    },
    {
        id: 38,
        name: "Grilovan√° ku≈ôec√≠ prsa s restovanou zeleninou",
        slug: "grilovana-kureci-prsa-s-restovanou-zeleninou",
        category: "dinner",
        protein: "40g",
        description: "≈†≈•avnat√° grilovan√° ku≈ôec√≠ prsa s k≈ôupavou restovanou zeleninou.",
        ingredients: ["200g ku≈ôec√≠ch prsou", "150g cukety", "1 paprika", "olivy"],
        difficulty: "Snadn√°",
        time: "20 minut"
    },
    {
        id: 39,
        name: "Fitness pizza s cottage cheese",
        slug: "fitness-pizza-s-cottage-cheese",
        category: "dinner",
        protein: "32g",
        description: "Dom√°c√≠ fitness pizza s cottage cheese jako z√°klad. Zdrav√° veƒçe≈ôe bez v√Ωƒçitek.",
        ingredients: ["150g cottage cheese", "100g ≈æampion≈Ø", "50g ≈°unky", "rajƒçata", "celozrnn√© tƒõsto"],
        difficulty: "St≈ôedn√≠",
        time: "30 minut"
    },
    {
        id: 40,
        name: "Peƒçen√Ω losos s quinoou",
        slug: "peceny-losos-s-quinoou",
        category: "dinner",
        protein: "38g",
        description: "Peƒçen√Ω losos s quinoou a ≈°pen√°tem. Omega-3 a kompletn√≠ proteiny.",
        ingredients: ["200g lososa", "80g quinoy", "100g ≈°pen√°tu", "citron"],
        difficulty: "St≈ôedn√≠",
        time: "35 minut"
    },
    {
        id: 41,
        name: "Kr≈Øt√≠ sekan√° s bramborov√Ωm pyr√©",
        slug: "kruti-sekana-s-bramborovym-pyre",
        category: "dinner",
        protein: "35g",
        description: "Dom√°c√≠ kr≈Øt√≠ sekan√° s nad√Ωchan√Ωm bramborov√Ωm pyr√©.",
        ingredients: ["200g kr≈Øt√≠ho masa", "200g brambor", "1 vejce", "bylinky"],
        difficulty: "St≈ôedn√≠",
        time: "45 minut"
    },
    {
        id: 42,
        name: "Plnƒõn√© papriky s kr≈Øt√≠m masem",
        slug: "plnene-papriky-s-krutim-masem",
        category: "dinner",
        protein: "33g",
        description: "Peƒçen√© papriky plnƒõn√© kr≈Øt√≠m masem a r√Ω≈æ√≠. Klasika, kter√° nechyb√≠.",
        ingredients: ["3 papriky", "150g kr≈Øt√≠ho masa", "60g r√Ω≈æe", "50g s√Ωra"],
        difficulty: "St≈ôedn√≠",
        time: "40 minut"
    },
    {
        id: 43,
        name: "Fitness carbonara s ku≈ôec√≠m masem",
        slug: "fitness-carbonara-s-kurecim-masem",
        category: "dinner",
        protein: "36g",
        description: "Fitness verze klasick√© carbonary s ku≈ôec√≠m masem m√≠sto slaniny.",
        ingredients: ["150g ku≈ôec√≠ho masa", "100g tƒõstovin", "2 vaj√≠ƒçka", "30g parmaz√°nu"],
        difficulty: "Snadn√°",
        time: "20 minut"
    },
    {
        id: 44,
        name: "Peƒçen√© ku≈ôe s bylinkami",
        slug: "pecene-kure-s-bylinkami",
        category: "dinner",
        protein: "45g",
        description: "Cel√© peƒçen√© ku≈ôe s bylinkami a peƒçen√Ωmi brambory. Nedƒõle jako z film≈Ø.",
        ingredients: ["1/2 ku≈ôete", "300g brambor", "bylinkov√© ko≈ôen√≠", "ƒçesnek"],
        difficulty: "St≈ôedn√≠",
        time: "60 minut"
    },
    {
        id: 45,
        name: "Tempeh stir-fry",
        slug: "tempeh-stir-fry",
        category: "dinner",
        protein: "26g",
        description: "Rychl√Ω asijsk√Ω stir-fry s tempeh a ƒçerstvou zeleninou.",
        ingredients: ["150g tempeh", "150g brokolice", "1 mrkev", "2 l≈æ√≠ce sojov√© om√°ƒçky"],
        difficulty: "Snadn√°",
        time: "15 minut"
    },

    // ü•§ N√°poje pokraƒçov√°n√≠ (46-60)
    {
        id: 46,
        name: "Post-workout recovery drink",
        slug: "post-workout-recovery-drink",
        category: "beverages",
        protein: "30g",
        description: "Regeneraƒçn√≠ n√°poj po tr√©ninku s proteinem a BCAA.",
        ingredients: ["35g protein powder", "1 ban√°n", "1 l≈æ√≠ce chia sem√≠nek", "5g BCAA"],
        difficulty: "Velmi snadn√°",
        time: "5 minut"
    },
    {
        id: 47,
        name: "Chocolate peanut butter smoothie",
        slug: "chocolate-peanut-butter-smoothie",
        category: "beverages",
        protein: "32g",
        description: "ƒåokol√°dov√Ω smoothie s ara≈°√≠dov√Ωm m√°slem. Jako dezert, ale zdrav√Ω.",
        ingredients: ["40g ƒçokol√°dov√©ho proteinu", "2 l≈æ√≠ce ara≈°√≠dov√©ho m√°sla", "1 ban√°n", "250ml ml√©ka"],
        difficulty: "Velmi snadn√°",
        time: "6 minut"
    },
    {
        id: 48,
        name: "Matcha protein latte",
        slug: "matcha-protein-latte",
        category: "beverages",
        protein: "20g",
        description: "Energizuj√≠c√≠ matcha latte s proteinem. Antioxidanty a s√≠la v jednom.",
        ingredients: ["1 l≈æiƒçka matcha", "25g vanilkov√©ho proteinu", "200ml ovesn√©ho ml√©ka"],
        difficulty: "Snadn√°",
        time: "8 minut"
    },
    {
        id: 49,
        name: "Protein iced coffee",
        slug: "protein-iced-coffee",
        category: "beverages",
        protein: "24g",
        description: "Ledov√° k√°va s proteinem. Perfektn√≠ letn√≠ osvƒõ≈æen√≠ s kofeinem.",
        ingredients: ["250ml studen√© k√°vy", "30g vanilkov√©ho proteinu", "led", "≈°petka sko≈ôice"],
        difficulty: "Velmi snadn√°",
        time: "5 minut"
    },
    {
        id: 50,
        name: "Strawberry protein milkshake",
        slug: "strawberry-protein-milkshake",
        category: "beverages",
        protein: "27g",
        description: "Jahodov√Ω proteinov√Ω milkshake. Lahodn√Ω a v√Ω≈æivn√Ω.",
        ingredients: ["150g jahod", "35g vanilkov√©ho proteinu", "200ml mandlov√©ho ml√©ka", "led"],
        difficulty: "Velmi snadn√°",
        time: "6 minut"
    },
    {
        id: 51,
        name: "Orange creamsicle smoothie",
        slug: "orange-creamsicle-smoothie",
        category: "beverages",
        protein: "23g",
        description: "Pomeranƒçovo-vanilkov√Ω smoothie jako zmrzlinov√° tyƒçinka.",
        ingredients: ["1 pomeranƒç", "30g vanilkov√©ho proteinu", "100g jogurtu", "led"],
        difficulty: "Snadn√°",
        time: "7 minut"
    },
    {
        id: 52,
        name: "Blueberry pie smoothie",
        slug: "blueberry-pie-smoothie",
        category: "beverages",
        protein: "25g",
        description: "Bor≈Øvkov√Ω smoothie jako kol√°ƒç. Chu≈• dez–µ—Ätu, v√Ω≈æiva ≈°ampiona.",
        ingredients: ["150g bor≈Øvek", "30g vanilkov√©ho proteinu", "2 l≈æ√≠ce ovesn√Ωch vloƒçek", "200ml ml√©ka"],
        difficulty: "Snadn√°",
        time: "8 minut"
    },
    {
        id: 53,
        name: "Cookies & cream protein shake",
        slug: "cookies-cream-protein-shake",
        category: "beverages",
        protein: "29g",
        description: "Shake s chut√≠ cookies & cream. Jako dezert z dƒõtstv√≠.",
        ingredients: ["35g vanilkov√©ho proteinu", "1 l≈æ√≠ce kakaa", "2 su≈°enky", "250ml ml√©ka"],
        difficulty: "Velmi snadn√°",
        time: "5 minut"
    },
    {
        id: 54,
        name: "Mango lassi protein",
        slug: "mango-lassi-protein",
        category: "beverages",
        protein: "21g",
        description: "Indick√Ω mango lassi obohacen√Ω o protein. Exotika a s√≠la.",
        ingredients: ["100g manga", "100g ≈ôeck√©ho jogurtu", "20g vanilkov√©ho proteinu", "kardamom"],
        difficulty: "Snadn√°",
        time: "6 minut"
    },
    {
        id: 55,
        name: "Mint chocolate chip smoothie",
        slug: "mint-chocolate-chip-smoothie",
        category: "beverages",
        protein: "26g",
        description: "M√°tovo-ƒçokol√°dov√Ω smoothie se ≈°pen√°tem. Zelen√Ω, ale chutn√° jako dezert.",
        ingredients: ["35g ƒçokol√°dov√©ho proteinu", "5 l√≠stk≈Ø m√°ty", "50g ≈°pen√°tu", "250ml ml√©ka"],
        difficulty: "Snadn√°",
        time: "6 minut"
    },
    {
        id: 56,
        name: "Banana bread protein shake",
        slug: "banana-bread-protein-shake",
        category: "beverages",
        protein: "28g",
        description: "Shake s chut√≠ ban√°nov√©ho chleba. Sn√≠danƒõ v sklenici.",
        ingredients: ["1 ban√°n", "35g vanilkov√©ho proteinu", "2 l≈æ√≠ce ovesn√Ωch vloƒçek", "≈°petka sko≈ôice"],
        difficulty: "Velmi snadn√°",
        time: "5 minut"
    },
    {
        id: 57,
        name: "Cherry vanilla protein smoothie",
        slug: "cherry-vanilla-protein-smoothie",
        category: "beverages",
        protein: "24g",
        description: "T≈ôe≈°≈àovo-vanilkov√Ω smoothie. Antioxidanty a protein.",
        ingredients: ["150g t≈ôe≈°n√≠", "30g vanilkov√©ho proteinu", "200ml mandlov√©ho ml√©ka", "led"],
        difficulty: "Snadn√°",
        time: "7 minut"
    },
    {
        id: 58,
        name: "Pumpkin spice protein latte",
        slug: "pumpkin-spice-protein-latte",
        category: "beverages",
        protein: "23g",
        description: "D√Ω≈àov√© latte s proteinem. Podzimn√≠ klasika pln√° vitam√≠n≈Ø.",
        ingredients: ["3 l≈æ√≠ce d√Ω≈àov√©ho pyr√©", "25g vanilkov√©ho proteinu", "200ml k√°vy", "pumpkin spice ko≈ôen√≠"],
        difficulty: "Snadn√°",
        time: "9 minut"
    },
    {
        id: 59,
        name: "Protein hork√° ƒçokol√°da",
        slug: "protein-horka-cokolada",
        category: "beverages",
        protein: "20g",
        description: "Hork√° ƒçokol√°da s proteinem. Zimn√≠ radost bez v√Ωƒçitek.",
        ingredients: ["30g ƒçokol√°dov√©ho proteinu", "250ml tepl√©ho ml√©ka", "1 l≈æ√≠ce kakaa"],
        difficulty: "Velmi snadn√°",
        time: "10 minut"
    },
    {
        id: 60,
        name: "Coconut protein smoothie",
        slug: "coconut-protein-smoothie",
        category: "beverages",
        protein: "25g",
        description: "Kokosov√Ω smoothie s proteinem. Tropick√Ω r√°j v sklenici.",
        ingredients: ["150ml kokosov√©ho ml√©ka", "30g vanilkov√©ho proteinu", "2 l≈æ√≠ce kokosov√Ωch vloƒçek", "led"],
        difficulty: "Snadn√°",
        time: "6 minut"
    }
];

// Blog articles database
const blogArticles = [
    {
        id: 1,
        title: "Nejlevnƒõj≈°√≠ zdroje proteinu v roce 2025: Kompletn√≠ pr≈Øvodce",
        slug: "nejlevnejsi-zdroje-proteinu-2025",
        excerpt: "Objevte 10 nejlevnƒõj≈°√≠ch zdroj≈Ø proteinu podle aktu√°ln√≠ch cen. Porovn√°n√≠ cen za gram proteinu nap≈ô√≠ƒç v≈°emi kategoriemi potravin.",
        content: `
<p>V roce 2025 se ceny potravin neust√°le mƒõn√≠, ale protein z≈Øst√°v√° kl√≠ƒçovou souƒç√°st√≠ zdrav√© stravy. Kter√© potraviny nab√≠zej√≠ nejlep≈°√≠ pomƒõr ceny a kvality proteinu?</p>

<h2>üèÜ TOP 10 nejlevnƒõj≈°√≠ch protein≈Ø</h2>

<p>Na z√°kladƒõ aktu√°ln√≠ anal√Ωzy 56+ potravin jsme sestavili ≈æeb≈ô√≠ƒçek nejlevnƒõj≈°√≠ch zdroj≈Ø proteinu:</p>

<ol>
<li><strong>ƒåerven√° ƒçoƒçka</strong> - 0.32 Kƒç/g proteinu</li>
<li><strong>Tvaroh polotuƒçn√Ω</strong> - 1.18 Kƒç/g proteinu</li>
<li><strong>D√Ω≈àov√° sem√≠nka</strong> - 1.32 Kƒç/g proteinu</li>
<li><strong>Cottage cheese</strong> - 1.36 Kƒç/g proteinu</li>
<li><strong>Ku≈ôec√≠ prsa</strong> - 1.39 Kƒç/g proteinu</li>
</ol>

<h2>üí° Tipy pro √∫sporu</h2>

<p><strong>Lu≈°tƒõniny jsou kr√°l:</strong> ƒåerven√° ƒçoƒçka, ƒçern√© fazole a dal≈°√≠ lu≈°tƒõniny nab√≠zej√≠ neporaziteln√Ω pomƒõr cena/protein.</p>

<p><strong>Ml√©ƒçn√© v√Ωrobky:</strong> Tvaroh a cottage cheese jsou dostupn√© a nutriƒçnƒõ vynikaj√≠c√≠ volby.</p>

<p><strong>Kupujte ve vƒõt≈°√≠m:</strong> Vƒõt≈°√≠ balen√≠ ƒçasto znamenaj√≠ lep≈°√≠ cenu za gram proteinu.</p>

<h2>üîç Srovn√°n√≠ kategori√≠</h2>

<p>R≈Øzn√© kategorie potravin nab√≠zej√≠ r≈Øzn√© cenov√© √∫rovnƒõ:</p>

<ul>
<li><strong>Lu≈°tƒõniny:</strong> 0.30-0.50 Kƒç/g (nejlevnƒõj≈°√≠)</li>
<li><strong>Ml√©ƒçn√© v√Ωrobky:</strong> 1.00-2.00 Kƒç/g (st≈ôedn√≠)</li>
<li><strong>Maso:</strong> 1.30-2.50 Kƒç/g (vy≈°≈°√≠)</li>
<li><strong>Dopl≈àky stravy:</strong> 3.00-6.00 Kƒç/g (nejdra≈æ≈°√≠)</li>
</ul>

<h2>üìä Praktick√© rady</h2>

<p>Pro optim√°ln√≠ v√Ω≈æivu kombinujte r≈Øzn√© zdroje proteinu. Nekompletn√≠ rostlinn√© proteiny lze doplnit kombinac√≠ (fazole + r√Ω≈æe = kompletn√≠ protein).</p>
        `,
        author: "Protein Hunter t√Ωm",
        publishDate: "2025-01-03",
        category: "analyze",
        tags: ["ceny", "porovn√°n√≠", "√∫spora", "lu≈°tƒõniny", "ekonomie"],
        readTime: "5 min",
        featured: true
    },
    {
        id: 2,
        title: "Protein pro zaƒç√°teƒçn√≠ky: V≈°e, co pot≈ôebujete vƒõdƒõt",
        slug: "protein-pro-zacatecniky-pruvodce",
        excerpt: "Kompletn√≠ pr≈Øvodce proteinem pro zaƒç√°teƒçn√≠ky. Kolik proteinu pot≈ôebujete, nejlep≈°√≠ zdroje a ƒçast√© m√Ωty vyvr√°cen√©.",
        content: `
<p>Zaƒç√≠n√°te s fitness nebo chcete zlep≈°it svou v√Ω≈æivu? Protein je z√°klad, ale kolem nƒõj koluje spousta m√Ωt≈Ø. Pojƒème si v≈°e vyjasnit.</p>

<h2>ü§î Co je to protein?</h2>

<p>Protein je makro≈æivina slo≈æen√° z aminokyselin - stavebn√≠ch kamen≈Ø na≈°ich sval≈Ø, org√°n≈Ø a tk√°n√≠. Tƒõlo pot≈ôebuje 20 r≈Øzn√Ωch aminokyselin, z nich≈æ 9 je esenci√°ln√≠ch (tƒõlo si je nedok√°≈æe vyrobit).</p>

<h2>üìè Kolik proteinu pot≈ôebujete?</h2>

<p>Obecn√© doporuƒçen√≠ podle aktivity:</p>

<ul>
<li><strong>Sedav√Ω zp≈Øsob ≈æivota:</strong> 0.8g/kg tƒõlesn√© hmotnosti</li>
<li><strong>Rekreaƒçn√≠ sport:</strong> 1.2-1.6g/kg</li>
<li><strong>Silov√Ω tr√©nink:</strong> 1.6-2.2g/kg</li>
<li><strong>Vrcholov√Ω sport:</strong> 2.0-2.5g/kg</li>
</ul>

<p><em>P≈ô√≠klad: ƒålovƒõk s hmotnost√≠ 70 kg a rekreaƒçn√≠m sportem pot≈ôebuje 84-112g proteinu dennƒõ.</em></p>

<h2>ü•© Nejlep≈°√≠ zdroje proteinu</h2>

<h3>Kompletn√≠ proteiny (obsahuj√≠ v≈°echny esenci√°ln√≠ aminokyseliny):</h3>
<ul>
<li>Maso, ryby, dr≈Øbe≈æ</li>
<li>Vejce</li>
<li>Ml√©ƒçn√© v√Ωrobky</li>
<li>Quinoa</li>
<li>S√≥ja</li>
</ul>

<h3>Nekompletn√≠ proteiny (lze kombinovat):</h3>
<ul>
<li>Lu≈°tƒõniny + obiloviny</li>
<li>O≈ôechy a semena</li>
<li>Zelenina</li>
</ul>

<h2>üí° Praktick√© tipy</h2>

<p><strong>Rozlo≈æte protein bƒõhem dne:</strong> 20-30g proteinu ka≈æd√© 3-4 hodiny je optim√°ln√≠ pro synt√©zu svalov√Ωch b√≠lkovin.</p>

<p><strong>Protein po tr√©ninku:</strong> Do 2 hodin po cviƒçen√≠ pro optim√°ln√≠ regeneraci.</p>

<p><strong>Sn√≠danƒõ je kl√≠ƒçov√°:</strong> 20-25g proteinu na sn√≠dani nastartuje metabolismus.</p>

<h2>‚ùå ƒåast√© m√Ωty</h2>

<p><strong>M√Ωtus:</strong> "P≈ô√≠li≈° mnoho proteinu po≈°kod√≠ ledviny."<br>
<strong>Pravda:</strong> U zdrav√Ωch lid√≠ nen√≠ nadmƒõrn√Ω protein probl√©m.</p>

<p><strong>M√Ωtus:</strong> "Rostlinn√© proteiny jsou hor≈°√≠."<br>
<strong>Pravda:</strong> P≈ôi spr√°vn√© kombinaci jsou stejnƒõ kvalitn√≠.</p>

<p><strong>M√Ωtus:</strong> "Protein jen pro kulturisty."<br>
<strong>Pravda:</strong> Protein pot≈ôebuje ka≈æd√Ω pro zdrav√≠ a vitalitu.</p>
        `,
        author: "Protein Hunter t√Ωm",
        publishDate: "2025-01-02",
        category: "guide",
        tags: ["zaƒç√°teƒçn√≠ci", "v√Ω≈æiva", "z√°klady", "zdrav√≠", "fitness"],
        readTime: "7 min",
        featured: true
    },
    {
        id: 3,
        title: "Rostlinn√© vs. ≈æivoƒçi≈°n√© proteiny: Vƒõdeck√© srovn√°n√≠ 2025",
        slug: "rostlinne-vs-zivocisne-proteiny-srovnani",
        excerpt: "Objektivn√≠ porovn√°n√≠ rostlinn√Ωch a ≈æivoƒçi≈°n√Ωch protein≈Ø. Biologick√° hodnota, aminokyselinov√Ω profil a praktick√© rady pro v√Ωbƒõr.",
        content: `
<p>Diskuse o rostlinn√Ωch vs. ≈æivoƒçi≈°n√Ωch proteinech je st√°le aktu√°ln√≠. Co ≈ô√≠k√° vƒõda a jak se rozhodnout pro svou stravu?</p>

<h2>üß¨ Biologick√° hodnota protein≈Ø</h2>

<p>Biologick√° hodnota ud√°v√°, jak efektivnƒõ tƒõlo dok√°≈æe vyu≈æ√≠t protein z potraviny:</p>

<table class="w-full border-collapse border border-gray-300 my-4">
<thead>
<tr class="bg-gray-100">
<th class="border border-gray-300 p-2">Potravina</th>
<th class="border border-gray-300 p-2">Biologick√° hodnota</th>
<th class="border border-gray-300 p-2">Typ</th>
</tr>
</thead>
<tbody>
<tr>
<td class="border border-gray-300 p-2">Vejce</td>
<td class="border border-gray-300 p-2">100</td>
<td class="border border-gray-300 p-2">≈Ωivoƒçi≈°n√Ω</td>
</tr>
<tr>
<td class="border border-gray-300 p-2">Whey protein</td>
<td class="border border-gray-300 p-2">96</td>
<td class="border border-gray-300 p-2">≈Ωivoƒçi≈°n√Ω</td>
</tr>
<tr>
<td class="border border-gray-300 p-2">Ku≈ôec√≠ maso</td>
<td class="border border-gray-300 p-2">79</td>
<td class="border border-gray-300 p-2">≈Ωivoƒçi≈°n√Ω</td>
</tr>
<tr>
<td class="border border-gray-300 p-2">S√≥ja</td>
<td class="border border-gray-300 p-2">74</td>
<td class="border border-gray-300 p-2">Rostlinn√Ω</td>
</tr>
<tr>
<td class="border border-gray-300 p-2">Quinoa</td>
<td class="border border-gray-300 p-2">73</td>
<td class="border border-gray-300 p-2">Rostlinn√Ω</td>
</tr>
</tbody>
</table>

<h2>üå± V√Ωhody rostlinn√Ωch protein≈Ø</h2>

<ul>
<li><strong>Ni≈æ≈°√≠ cena:</strong> Lu≈°tƒõniny a obiloviny jsou ekonomicky v√Ωhodn√©</li>
<li><strong>Vl√°knina:</strong> Podporuje tr√°ven√≠ a zdrav√≠ st≈ôev</li>
<li><strong>Antioxidanty:</strong> Ochrana p≈ôed voln√Ωmi radik√°ly</li>
<li><strong>Udr≈æitelnost:</strong> Men≈°√≠ ekologick√° stopa</li>
<li><strong>Ni≈æ≈°√≠ nasycen√© tuky:</strong> Lep≈°√≠ pro kardiovaskul√°rn√≠ zdrav√≠</li>
</ul>

<h2>ü•© V√Ωhody ≈æivoƒçi≈°n√Ωch protein≈Ø</h2>

<ul>
<li><strong>Kompletn√≠ aminokyselinov√Ω profil:</strong> V≈°echny esenci√°ln√≠ aminokyseliny</li>
<li><strong>Vy≈°≈°√≠ biologick√° hodnota:</strong> Lep≈°√≠ vyu≈æitelnost tƒõlem</li>
<li><strong>B12 a ≈æelezo:</strong> Snadno vst≈ôebateln√© formy</li>
<li><strong>Kreatin:</strong> Pro v√Ωkon a s√≠lu</li>
<li><strong>Hustota ≈æivin:</strong> V√≠ce proteinu na gram</li>
</ul>

<h2>üî¨ Co ≈ô√≠k√° vƒõda?</h2>

<p><strong>Studie z roku 2024:</strong> Kombinace rostlinn√Ωch a ≈æivoƒçi≈°n√Ωch protein≈Ø poskytuje optim√°ln√≠ v√Ωsledky pro synt√©zu svalov√Ωch b√≠lkovin.</p>

<p><strong>Kl√≠ƒçov√© pozorov√°n√≠:</strong></p>
<ul>
<li>Rostlinn√© proteiny pot≈ôebuj√≠ vy≈°≈°√≠ d√°vky (+ 20-30%)</li>
<li>Kombinace r≈Øzn√Ωch rostlinn√Ωch zdroj≈Ø = kompletn√≠ protein</li>
<li>Timing je d≈Øle≈æitƒõj≈°√≠ ne≈æ zdroj proteinu</li>
</ul>

<h2>üí° Praktick√© doporuƒçen√≠</h2>

<h3>Pro omnivory (v≈°e≈æravce):</h3>
<p>70% ≈æivoƒçi≈°n√© + 30% rostlinn√© proteiny pro optim√°ln√≠ v√Ω≈æivu a udr≈æitelnost.</p>

<h3>Pro vegetari√°ny:</h3>
<p>Kombinujte: lu≈°tƒõniny + obiloviny, o≈ôechy + semena, ml√©ƒçn√© v√Ωrobky + rostlinn√© zdroje.</p>

<h3>Pro vegany:</h3>
<p>Zamƒõ≈ôte se na: quinoa, amarant, konopn√° sem√≠nka, tofu + fazole + r√Ω≈æe kombinace.</p>

<h2>üìä Cenov√© srovn√°n√≠ (Kƒç/g proteinu)</h2>

<p><strong>Nejlevnƒõj≈°√≠ rostlinn√©:</strong></p>
<ul>
<li>ƒåerven√° ƒçoƒçka: 0.32 Kƒç/g</li>
<li>D√Ω≈àov√° sem√≠nka: 1.32 Kƒç/g</li>
<li>Quinoa: 2.13 Kƒç/g</li>
</ul>

<p><strong>Nejlevnƒõj≈°√≠ ≈æivoƒçi≈°n√©:</strong></p>
<ul>
<li>Tvaroh: 1.18 Kƒç/g</li>
<li>Cottage cheese: 1.36 Kƒç/g</li>
<li>Ku≈ôec√≠ prsa: 1.39 Kƒç/g</li>
</ul>

<h2>üéØ Z√°vƒõr</h2>

<p>Neexistuje "lep≈°√≠" typ proteinu. Z√°le≈æ√≠ na va≈°ich c√≠lech, rozpoƒçtu, etick√Ωch preferenc√≠ch a zdravotn√≠m stavu. Nejlep≈°√≠ strategie je kombinace obou typ≈Ø s d≈Ørazem na rozmanitost a kvalitu.</p>
        `,
        author: "Protein Hunter t√Ωm",
        publishDate: "2025-01-01",
        category: "comparison",
        tags: ["rostlinn√©", "≈æivoƒçi≈°n√©", "vƒõda", "srovn√°n√≠", "biologie"],
        readTime: "8 min",
        featured: false
    }
];

// Generate recipe category pages
const recipeCategories = {
    'breakfast': 'Proteinov√© sn√≠danƒõ',
    'lunch': 'Fitness obƒõdy', 
    'dinner': 'Zdrav√© veƒçe≈ôe',
    'beverages': 'Proteinov√© n√°poje'
};

// Recipes index page
const recipesIndexHtml = `<!DOCTYPE html>
<html lang="cs">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Recepty s vysok√Ωm proteinem - Fitness recepty pro zdravou stravu</title>
    <meta name="description" content="Kolekce ${recipesData.length} recept≈Ø s vysok√Ωm obsahem proteinu. Sn√≠danƒõ, obƒõdy, veƒçe≈ôe a n√°poje pro fitness a zdravou stravu.">
    <meta name="keywords" content="proteinov√© recepty, fitness recepty, zdrav√° strava, vysok√Ω protein, sportovn√≠ v√Ω≈æiva">
    
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'primary': '#10b981',
                    }
                }
            }
        }
    </script>
</head>
<body class="bg-gray-50">
    ${getNavigation()}

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900 mb-4">üçΩÔ∏è Recepty s vysok√Ωm proteinem</h1>
            <p class="text-xl text-gray-600">
                ${recipesData.length} recept≈Ø pro fitness a zdravou stravu. Sn√≠danƒõ, obƒõdy, veƒçe≈ôe a n√°poje s vysok√Ωm obsahem proteinu.
            </p>
        </div>
        
        <!-- Recipe categories -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-12">
            ${Object.entries(recipeCategories).map(([category, name]) => `
                <div class="bg-white p-6 rounded-lg shadow hover:shadow-md transition-shadow">
                    <h3 class="text-lg font-semibold mb-3">${name}</h3>
                    <div class="text-sm text-gray-600 mb-4">
                        ${recipesData.filter(r => r.category === category).length} recept≈Ø
                    </div>
                    <a href="/protein-hunter/recepty/${category}/" class="text-primary hover:underline font-medium">
                        Zobrazit recepty ‚Üí
                    </a>
                </div>
            `).join('')}
        </div>
        
        <!-- All recipes list -->
        <div class="bg-white rounded-lg shadow">
            <div class="px-6 py-4 border-b">
                <h2 class="text-xl font-semibold">üìã V≈°echny recepty</h2>
            </div>
            <div class="divide-y divide-gray-100">
                ${recipesData.map(recipe => `
                    <div class="p-6 hover:bg-gray-50 transition-colors">
                        <div class="flex items-start justify-between">
                            <div class="flex-1">
                                <div class="flex items-center gap-3 mb-2">
                                    <h3 class="text-lg font-semibold text-primary">
                                        <a href="/protein-hunter/recepty/${recipe.category}/${recipe.slug}.html" class="hover:underline">${recipe.name}</a>
                                    </h3>
                                    <span class="bg-primary/10 text-primary px-2 py-1 rounded text-sm font-medium">${recipe.protein}</span>
                                </div>
                                <p class="text-gray-600 mb-3">${recipe.description}</p>
                                <div class="flex items-center gap-4 text-sm text-gray-500">
                                    <span class="bg-gray-100 px-2 py-1 rounded">${recipeCategories[recipe.category]}</span>
                                    <span>‚è±Ô∏è ${recipe.time}</span>
                                    <span>üë®‚Äçüç≥ ${recipe.difficulty}</span>
                                </div>
                            </div>
                        </div>
                    </div>
                `).join('')}
            </div>
        </div>
    </main>

    ${getFooter()}
</body>
</html>`;

fs.writeFileSync('recepty/index.html', recipesIndexHtml);
console.log('Generated: recepty/index.html');

// Generate recipe category pages
Object.entries(recipeCategories).forEach(([category, categoryName]) => {
    const categoryRecipes = recipesData.filter(r => r.category === category);
    
    if (!fs.existsSync(`recepty/${category}`)) {
        fs.mkdirSync(`recepty/${category}`, { recursive: true });
    }
    
    const categoryHtml = `<!DOCTYPE html>
<html lang="cs">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${categoryName} - ${categoryRecipes.length} recept≈Ø s vysok√Ωm proteinem</title>
    <meta name="description" content="${categoryName}: ${categoryRecipes.length} recept≈Ø s vysok√Ωm obsahem proteinu. Zdrav√° strava pro fitness a sport.">
    <meta name="keywords" content="${categoryName.toLowerCase()}, proteinov√© recepty, fitness recepty, zdrav√° strava">
    
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'primary': '#10b981',
                    }
                }
            }
        }
    </script>
</head>
<body class="bg-gray-50">
    ${getNavigation()}

    <!-- Breadcrumbs -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-3">
        <nav class="text-sm">
            <a href="/protein-hunter/" class="text-gray-500 hover:text-primary">Dom≈Ø</a>
            <span class="mx-2 text-gray-400">/</span>
            <a href="/protein-hunter/recepty/" class="text-gray-500 hover:text-primary">Recepty</a>
            <span class="mx-2 text-gray-400">/</span>
            <span class="text-gray-900 font-medium">${categoryName}</span>
        </nav>
    </div>

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900 mb-4">${categoryName}</h1>
            <p class="text-xl text-gray-600">
                ${categoryRecipes.length} recept≈Ø s vysok√Ωm obsahem proteinu. Ide√°ln√≠ pro fitness a zdravou stravu.
            </p>
        </div>
        
        <!-- Category recipes -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            ${categoryRecipes.map(recipe => `
                <div class="bg-white rounded-lg shadow hover:shadow-md transition-shadow overflow-hidden">
                    <div class="p-6">
                        <div class="flex items-center justify-between mb-3">
                            <h3 class="text-lg font-semibold text-primary">
                                <a href="/protein-hunter/recepty/${recipe.category}/${recipe.slug}.html" class="hover:underline">${recipe.name}</a>
                            </h3>
                            <span class="bg-primary/10 text-primary px-2 py-1 rounded text-sm font-medium">${recipe.protein}</span>
                        </div>
                        <p class="text-gray-600 mb-4">${recipe.description}</p>
                        <div class="space-y-2 text-sm text-gray-500">
                            <div class="flex items-center gap-2">
                                <span>‚è±Ô∏è</span>
                                <span>${recipe.time}</span>
                            </div>
                            <div class="flex items-center gap-2">
                                <span>üë®‚Äçüç≥</span>
                                <span>${recipe.difficulty}</span>
                            </div>
                        </div>
                        <div class="mt-4">
                            <a href="/protein-hunter/recepty/${recipe.category}/${recipe.slug}.html" class="text-primary hover:underline font-medium">
                                Zobrazit recept ‚Üí
                            </a>
                        </div>
                    </div>
                </div>
            `).join('')}
        </div>
    </main>

    ${getFooter()}
</body>
</html>`;

    fs.writeFileSync(`recepty/${category}/index.html`, categoryHtml);
    console.log(`Generated: recepty/${category}/index.html`);
});

// Generate individual recipe pages
recipesData.forEach(recipe => {
    const recipeHtml = `<!DOCTYPE html>
<html lang="cs">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${recipe.name} - ${recipe.protein} proteinu - ${recipe.time}</title>
    <meta name="description" content="${recipe.description} Obsahuje ${recipe.protein} proteinu. Obt√≠≈ænost: ${recipe.difficulty}, doba p≈ô√≠pravy: ${recipe.time}.">
    <meta name="keywords" content="${recipe.name}, proteinov√Ω recept, ${recipeCategories[recipe.category].toLowerCase()}, fitness recepty, ${recipe.difficulty.toLowerCase()}">
    
    <!-- Open Graph -->
    <meta property="og:title" content="${recipe.name} - ${recipe.protein} proteinu">
    <meta property="og:description" content="${recipe.description}">
    <meta property="og:type" content="article">
    <meta property="og:url" content="http://46.62.166.240/protein-hunter/recepty/${recipe.category}/${recipe.slug}.html">
    
    <!-- Schema.org structured data -->
    <script type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@type": "Recipe",
        "name": "${recipe.name}",
        "description": "${recipe.description}",
        "recipeCategory": "${recipeCategories[recipe.category]}",
        "prepTime": "PT${recipe.time.replace(' minut', 'M')}",
        "recipeYield": "1 porce",
        "nutrition": {
            "@type": "NutritionInformation",
            "proteinContent": "${recipe.protein}"
        },
        "recipeIngredient": ${JSON.stringify(recipe.ingredients)},
        "difficulty": "${recipe.difficulty}"
    }
    </script>
    
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'primary': '#10b981',
                    }
                }
            }
        }
    </script>
</head>
<body class="bg-gray-50">
    ${getNavigation()}

    <!-- Breadcrumbs -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-3">
        <nav class="text-sm">
            <a href="/protein-hunter/" class="text-gray-500 hover:text-primary">Dom≈Ø</a>
            <span class="mx-2 text-gray-400">/</span>
            <a href="/protein-hunter/recepty/" class="text-gray-500 hover:text-primary">Recepty</a>
            <span class="mx-2 text-gray-400">/</span>
            <a href="/protein-hunter/recepty/${recipe.category}/" class="text-gray-500 hover:text-primary">${recipeCategories[recipe.category]}</a>
            <span class="mx-2 text-gray-400">/</span>
            <span class="text-gray-900 font-medium">${recipe.name}</span>
        </nav>
    </div>

    <!-- Main Content -->
    <main class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <!-- Recipe Header -->
        <div class="bg-white rounded-lg shadow p-8 mb-8">
            <div class="mb-6">
                <div class="flex items-center gap-3 mb-4">
                    <span class="bg-primary/10 text-primary px-3 py-1 rounded-full text-sm font-medium">${recipeCategories[recipe.category]}</span>
                    <span class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-bold">${recipe.protein}</span>
                </div>
                <h1 class="text-4xl font-bold text-gray-900 mb-4">${recipe.name}</h1>
                <p class="text-xl text-gray-600 mb-6">${recipe.description}</p>
            </div>
            
            <!-- Recipe Stats -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
                <div class="bg-blue-50 p-4 rounded-lg text-center">
                    <div class="text-2xl font-bold text-blue-600">‚è±Ô∏è</div>
                    <div class="text-lg font-semibold text-blue-800">${recipe.time}</div>
                    <div class="text-sm text-blue-600">doba p≈ô√≠pravy</div>
                </div>
                <div class="bg-green-50 p-4 rounded-lg text-center">
                    <div class="text-2xl font-bold text-green-600">üí™</div>
                    <div class="text-lg font-semibold text-green-800">${recipe.protein}</div>
                    <div class="text-sm text-green-600">proteinu</div>
                </div>
                <div class="bg-purple-50 p-4 rounded-lg text-center">
                    <div class="text-2xl font-bold text-purple-600">üë®‚Äçüç≥</div>
                    <div class="text-lg font-semibold text-purple-800">${recipe.difficulty}</div>
                    <div class="text-sm text-purple-600">obt√≠≈ænost</div>
                </div>
            </div>
        </div>
        
        <!-- Ingredients -->
        <div class="bg-white rounded-lg shadow p-6 mb-8">
            <h2 class="text-2xl font-semibold mb-4">üõí Ingredience</h2>
            <ul class="space-y-3">
                ${recipe.ingredients.map(ingredient => `
                    <li class="flex items-center">
                        <span class="w-2 h-2 bg-primary rounded-full mr-3"></span>
                        <span class="text-gray-700">${ingredient}</span>
                    </li>
                `).join('')}
            </ul>
        </div>
        
        <!-- Instructions placeholder -->
        <div class="bg-white rounded-lg shadow p-6 mb-8">
            <h2 class="text-2xl font-semibold mb-4">üë©‚Äçüç≥ Postup p≈ô√≠pravy</h2>
            <div class="space-y-4">
                <div class="flex gap-4">
                    <span class="flex-shrink-0 w-8 h-8 bg-primary text-white rounded-full flex items-center justify-center font-semibold">1</span>
                    <p class="text-gray-700 pt-1">P≈ôipravte si v≈°echny ingredience podle seznamu v√Ω≈°e.</p>
                </div>
                <div class="flex gap-4">
                    <span class="flex-shrink-0 w-8 h-8 bg-primary text-white rounded-full flex items-center justify-center font-semibold">2</span>
                    <p class="text-gray-700 pt-1">Postupujte podle z√°kladn√≠ch pravidel p≈ô√≠pravy pro kategorii "${recipeCategories[recipe.category]}".</p>
                </div>
                <div class="flex gap-4">
                    <span class="flex-shrink-0 w-8 h-8 bg-primary text-white rounded-full flex items-center justify-center font-semibold">3</span>
                    <p class="text-gray-700 pt-1">Serv√≠rujte ƒçerstv√© a vychutnejte si vysok√Ω obsah proteinu (${recipe.protein}).</p>
                </div>
            </div>
        </div>
        
        <!-- Nutrition Info -->
        <div class="bg-white rounded-lg shadow p-6 mb-8">
            <h2 class="text-2xl font-semibold mb-4">üìä Nutriƒçn√≠ hodnoty</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <h3 class="font-semibold text-lg mb-3">Kl√≠ƒçov√© hodnoty</h3>
                    <div class="space-y-2">
                        <div class="flex justify-between py-2 border-b border-gray-100">
                            <span class="text-gray-600">Protein:</span>
                            <span class="font-semibold text-primary">${recipe.protein}</span>
                        </div>
                        <div class="flex justify-between py-2 border-b border-gray-100">
                            <span class="text-gray-600">Kategorie:</span>
                            <span class="font-semibold">${recipeCategories[recipe.category]}</span>
                        </div>
                        <div class="flex justify-between py-2 border-b border-gray-100">
                            <span class="text-gray-600">Obt√≠≈ænost:</span>
                            <span class="font-semibold">${recipe.difficulty}</span>
                        </div>
                    </div>
                </div>
                <div>
                    <h3 class="font-semibold text-lg mb-3">Doporuƒçen√≠</h3>
                    <div class="space-y-2 text-sm text-gray-600">
                        <p>‚Ä¢ Ide√°ln√≠ ${recipe.category === 'breakfast' ? 'na sn√≠dani' : recipe.category === 'lunch' ? 'k obƒõdu' : recipe.category === 'dinner' ? 'k veƒçe≈ôi' : 'jako n√°poj'}</p>
                        <p>‚Ä¢ Vysok√Ω obsah kvalitn√≠ch b√≠lkovin</p>
                        <p>‚Ä¢ Vhodn√© pro fitness a zdravou stravu</p>
                        <p>‚Ä¢ Doba p≈ô√≠pravy pouze ${recipe.time}</p>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Related recipes -->
        <div class="bg-white rounded-lg shadow p-6">
            <h2 class="text-xl font-semibold mb-4">üîó Podobn√© recepty</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                ${recipesData.filter(r => r.category === recipe.category && r.id !== recipe.id).slice(0, 2).map(similar => `
                    <div class="border rounded-lg p-4 hover:shadow-md transition-shadow">
                        <h3 class="font-semibold text-primary mb-2">
                            <a href="/protein-hunter/recepty/${similar.category}/${similar.slug}.html" class="hover:underline">${similar.name}</a>
                        </h3>
                        <div class="text-sm text-gray-600 space-y-1">
                            <div>Protein: ${similar.protein}</div>
                            <div>Doba: ${similar.time}</div>
                            <div class="font-semibold text-primary">${similar.difficulty}</div>
                        </div>
                    </div>
                `).join('')}
            </div>
        </div>
    </main>

    ${getFooter()}
</body>
</html>`;

    const recipeFilePath = `recepty/${recipe.category}/${recipe.slug}.html`;
    fs.writeFileSync(recipeFilePath, recipeHtml);
    console.log(`Generated: ${recipeFilePath}`);
});

// Generate slovnik (dictionary) pages
console.log('Generating dictionary pages...');
if (!fs.existsSync('slovnik')) {
    fs.mkdirSync('slovnik', { recursive: true });
}

// Dictionary terms database
const dictionaryTerms = [
    {
        id: 1,
        term: "Protein",
        slug: "protein",
        definition: "B√≠lkovina je slo≈æit√° organick√° slouƒçenina slo≈æen√° z aminokyselin. Je nezbytn√° pro r≈Øst, opravy a funkce v≈°ech bunƒõk v tƒõle.",
        category: "basics",
        relatedTerms: ["aminokyseliny", "biologick√° hodnota", "kompletn√≠ protein"]
    },
    {
        id: 2,
        term: "Aminokyseliny",
        slug: "aminokyseliny", 
        definition: "Stavebn√≠ kameny b√≠lkovin. Existuje 20 aminokyselin, z nich≈æ 9 je esenci√°ln√≠ch (tƒõlo si je nedok√°≈æe vyrobit).",
        category: "basics",
        relatedTerms: ["esenci√°ln√≠ aminokyseliny", "BCAA", "protein"]
    },
    {
        id: 3,
        term: "BCAA",
        slug: "bcaa",
        definition: "Branched-Chain Amino Acids - aminokyseliny s rozvƒõtven√Ωm ≈ôetƒõzcem (leucin, isoleucin, valin). D≈Øle≈æit√© pro regeneraci sval≈Ø.",
        category: "supplements",
        relatedTerms: ["leucin", "aminokyseliny", "regenerace"]
    },
    {
        id: 4,
        term: "Biologick√° hodnota",
        slug: "biologicka-hodnota",
        definition: "M√≠ra kvality proteinu - jak efektivnƒõ tƒõlo dok√°≈æe vyu≈æ√≠t protein z potraviny pro synt√©zu vlastn√≠ch b√≠lkovin.",
        category: "basics", 
        relatedTerms: ["kompletn√≠ protein", "aminokyseliny", "kvalita proteinu"]
    },
    {
        id: 5,
        term: "Whey protein",
        slug: "whey-protein",
        definition: "Syrov√°tkov√Ω protein z√≠skan√Ω p≈ôi v√Ωrobƒõ s√Ωra. Rychle se vst≈ôeb√°v√° a m√° vysokou biologickou hodnotu.",
        category: "supplements",
        relatedTerms: ["kasein", "protein powder", "biologick√° hodnota"]
    },
    {
        id: 6,
        term: "Kasein",
        slug: "kasein",
        definition: "Pomalu se vst≈ôeb√°vaj√≠c√≠ protein z ml√©ka. Ide√°ln√≠ p≈ôed span√≠m pro dlouhodob√© z√°sobov√°n√≠ sval≈Ø aminokyselinami.",
        category: "supplements",
        relatedTerms: ["whey protein", "ml√©ƒçn√Ω protein", "noƒçn√≠ regenerace"]
    },
    {
        id: 7,
        term: "Kompletn√≠ protein",
        slug: "kompletni-protein",
        definition: "Protein obsahuj√≠c√≠ v≈°ech 9 esenci√°ln√≠ch aminokyselin v dostateƒçn√©m mno≈æstv√≠. Typicky ≈æivoƒçi≈°n√© zdroje a quinoa, s√≥ja.",
        category: "basics",
        relatedTerms: ["aminokyseliny", "biologick√° hodnota", "esenci√°ln√≠ aminokyseliny"]
    },
    {
        id: 8,
        term: "Esenci√°ln√≠ aminokyseliny",
        slug: "esencialni-aminokyseliny",
        definition: "9 aminokyselin, kter√© si tƒõlo nedok√°≈æe samo vyrobit a mus√≠ je z√≠skat z potravy: leucin, isoleucin, valin, lysin, methionin, fenylalanin, threonin, tryptofan, histidin.",
        category: "basics",
        relatedTerms: ["aminokyseliny", "BCAA", "kompletn√≠ protein"]
    },
    {
        id: 9,
        term: "Leucin",
        slug: "leucin",
        definition: "Nejd≈Øle≈æitƒõj≈°√≠ aminokyselina pro r≈Øst sval≈Ø. Aktivuje mTOR dr√°hu, kter√° spou≈°t√≠ synt√©zu svalov√Ωch b√≠lkovin.",
        category: "supplements",
        relatedTerms: ["BCAA", "synt√©za proteinu", "svalov√Ω r≈Øst"]
    },
    {
        id: 10,
        term: "Synt√©za svalov√Ωch b√≠lkovin (MPS)",
        slug: "synteza-svalovych-bilkovin",
        definition: "Muscle Protein Synthesis - proces tvorby nov√Ωch svalov√Ωch b√≠lkovin. Stimulov√°n proteinem, p≈ôedev≈°√≠m leucinem a tr√©ninkem.",
        category: "training",
        relatedTerms: ["leucin", "protein", "regenerace"]
    },
    {
        id: 11,
        term: "Denn√≠ doporuƒçen√Ω p≈ô√≠jem proteinu",
        slug: "denni-doporuceny-prijem-proteinu",
        definition: "Pro sedav√Ω ≈æivotn√≠ styl 0.8g/kg, rekreaƒçn√≠ sport 1.2-1.6g/kg, silov√Ω tr√©nink 1.6-2.2g/kg tƒõlesn√© hmotnosti.",
        category: "nutrition",
        relatedTerms: ["protein", "v√Ω≈æiva", "tr√©nink"]
    },
    {
        id: 12,
        term: "Protein powder",
        slug: "protein-powder",
        definition: "Su≈°en√Ω proteinov√Ω pr√°≈°ek - nejƒçastƒõji whey, kasein nebo rostlinn√© proteiny. Praktick√Ω zp≈Øsob doplnƒõn√≠ proteinu.",
        category: "supplements",
        relatedTerms: ["whey protein", "kasein", "dopl≈àky"]
    },
    {
        id: 13,
        term: "Anabolick√© okno",
        slug: "anabolicke-okno",
        definition: "Obdob√≠ po tr√©ninku, kdy tƒõlo nejv√≠ce pot≈ôebuje protein pro regeneraci. Modern√≠ v√Ωzkum ukazuje, ≈æe je m√©nƒõ kritick√© ne≈æ se myslelo.",
        category: "training",
        relatedTerms: ["regenerace", "protein timing", "post-workout"]
    },
    {
        id: 14,
        term: "Rostlinn√Ω protein",
        slug: "rostlinny-protein",
        definition: "Protein z rostlinn√Ωch zdroj≈Ø jako jsou lu≈°tƒõniny, o≈ôechy, s√≥ja, tofu. ƒåasto nekompletn√≠, ale kombinac√≠ lze z√≠skat v≈°echny aminokyseliny.",
        category: "nutrition",
        relatedTerms: ["kompletn√≠ protein", "vegan", "lu≈°tƒõniny"]
    },
    {
        id: 15,
        term: "Izol√°t",
        slug: "izolat",
        definition: "Whey protein isolate - nejƒçist≈°√≠ forma syrov√°tkov√©ho proteinu (90-95% proteinu), minim√°ln√≠ lakt√≥za a tuky.",
        category: "supplements",
        relatedTerms: ["whey protein", "koncentr√°t", "ƒçistota proteinu"]
    }
];

const dictionaryCategories = {
    'basics': 'Z√°kladn√≠ pojmy',
    'supplements': 'Dopl≈àky stravy',
    'nutrition': 'V√Ω≈æiva',
    'training': 'Tr√©nink'
};

// Dictionary index page
const dictionaryIndexHtml = `<!DOCTYPE html>
<html lang="cs">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Slovn√≠k proteinov√Ωch pojm≈Ø - ${dictionaryTerms.length} definic pro fitness a v√Ω≈æivu</title>
    <meta name="description" content="Kompletn√≠ slovn√≠k proteinov√Ωch a fitness pojm≈Ø. ${dictionaryTerms.length} definic aminokyselin, dopl≈àk≈Ø stravy a v√Ω≈æivy.">
    <meta name="keywords" content="slovn√≠k protein≈Ø, fitness pojmy, aminokyseliny, dopl≈àky stravy, sportovn√≠ v√Ω≈æiva">
    
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'primary': '#10b981',
                    }
                }
            }
        }
    </script>
</head>
<body class="bg-gray-50">
    ${getNavigation()}

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900 mb-4">üìö Slovn√≠k proteinov√Ωch pojm≈Ø</h1>
            <p class="text-xl text-gray-600">
                ${dictionaryTerms.length} definic a vysvƒõtlen√≠ pojm≈Ø z oblasti protein≈Ø, fitness a sportovn√≠ v√Ω≈æivy.
            </p>
        </div>
        
        <!-- Search box -->
        <div class="bg-white rounded-lg shadow p-6 mb-8">
            <div class="relative">
                <input type="text" id="searchBox" placeholder="Hledat v slovn√≠ku..." 
                       class="w-full px-4 py-3 pr-10 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent">
                <div class="absolute inset-y-0 right-0 flex items-center pr-3">
                    <span class="text-gray-400">üîç</span>
                </div>
            </div>
        </div>
        
        <!-- Alphabet navigation -->
        <div class="bg-white rounded-lg shadow p-4 mb-8">
            <div class="flex flex-wrap gap-2 justify-center">
                ${Array.from('ABCDEFGHIJKLMNOPQRSTUVWXYZ').map(letter => `
                    <a href="#${letter}" class="px-3 py-1 text-sm border rounded hover:bg-primary hover:text-white transition-colors">${letter}</a>
                `).join('')}
            </div>
        </div>
        
        <!-- Terms list -->
        <div class="bg-white rounded-lg shadow" id="termsList">
            <div class="px-6 py-4 border-b">
                <h2 class="text-xl font-semibold">üìã V≈°echny pojmy</h2>
            </div>
            <div class="divide-y divide-gray-100">
                ${dictionaryTerms.sort((a, b) => a.term.localeCompare(b.term)).map(term => `
                    <div class="p-6 hover:bg-gray-50 transition-colors" data-term="${term.term.toLowerCase()}">
                        <div class="mb-3">
                            <h3 class="text-lg font-semibold text-primary mb-1" id="${term.term.charAt(0).toUpperCase()}">
                                <a href="/protein-hunter/slovnik/${term.slug}.html" class="hover:underline">${term.term}</a>
                            </h3>
                            <span class="text-sm text-gray-500 bg-gray-100 px-2 py-1 rounded">${dictionaryCategories[term.category]}</span>
                        </div>
                        <p class="text-gray-700 mb-3">${term.definition}</p>
                        <div class="flex items-center gap-2 text-sm">
                            <span class="text-gray-500">Souvisej√≠c√≠:</span>
                            ${term.relatedTerms.map(related => `
                                <span class="text-primary hover:underline cursor-pointer">${related}</span>
                            `).join(', ')}
                        </div>
                    </div>
                `).join('')}
            </div>
        </div>
    </main>

    ${getFooter()}

    <script>
        // Simple search functionality
        document.getElementById('searchBox').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const terms = document.querySelectorAll('[data-term]');
            
            terms.forEach(term => {
                const termText = term.getAttribute('data-term');
                if (termText.includes(searchTerm)) {
                    term.style.display = 'block';
                } else {
                    term.style.display = 'none';
                }
            });
        });
    </script>
</body>
</html>`;

fs.writeFileSync('slovnik/index.html', dictionaryIndexHtml);
console.log('Generated: slovnik/index.html');

// Generate individual dictionary term pages
dictionaryTerms.forEach(term => {
    const relatedTermsHtml = term.relatedTerms.map(relatedTerm => {
        const relatedSlug = relatedTerm.toLowerCase().replace(/\s+/g, '-').replace(/[√°ƒçƒè√©ƒõ√≠≈à√≥≈ô≈°≈•√∫≈Ø√Ω≈æ]/g, match => {
            const map = {'√°':'a','ƒç':'c','ƒè':'d','√©':'e','ƒõ':'e','√≠':'i','≈à':'n','√≥':'o','≈ô':'r','≈°':'s','≈•':'t','√∫':'u','≈Ø':'u','√Ω':'y','≈æ':'z'};
            return map[match] || match;
        });
        return `<a href="/protein-hunter/slovnik/${relatedSlug}.html" class="text-primary hover:underline">${relatedTerm}</a>`;
    }).join(', ');

    const termHtml = `<!DOCTYPE html>
<html lang="cs">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${term.term} - definice a v√Ωznam v fitness a v√Ω≈æivƒõ</title>
    <meta name="description" content="${term.term}: ${term.definition} Kompletn√≠ vysvƒõtlen√≠ pojmu z oblasti protein≈Ø a sportovn√≠ v√Ω≈æivy.">
    <meta name="keywords" content="${term.term}, ${dictionaryCategories[term.category].toLowerCase()}, fitness pojmy, sportovn√≠ v√Ω≈æiva, protein">
    
    <!-- Open Graph -->
    <meta property="og:title" content="${term.term} - definice a v√Ωznam">
    <meta property="og:description" content="${term.definition}">
    <meta property="og:type" content="article">
    <meta property="og:url" content="http://46.62.166.240/protein-hunter/slovnik/${term.slug}.html">
    
    <!-- Schema.org structured data -->
    <script type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@type": "DefinedTerm",
        "name": "${term.term}",
        "description": "${term.definition}",
        "inDefinedTermSet": {
            "@type": "DefinedTermSet",
            "name": "Slovn√≠k proteinov√Ωch pojm≈Ø",
            "description": "Kompletn√≠ slovn√≠k pojm≈Ø z oblasti protein≈Ø a fitness"
        },
        "termCode": "${term.slug}"
    }
    </script>
    
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'primary': '#10b981',
                    }
                }
            }
        }
    </script>
</head>
<body class="bg-gray-50">
    ${getNavigation()}

    <!-- Breadcrumbs -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-3">
        <nav class="text-sm">
            <a href="/protein-hunter/" class="text-gray-500 hover:text-primary">Dom≈Ø</a>
            <span class="mx-2 text-gray-400">/</span>
            <a href="/protein-hunter/slovnik/" class="text-gray-500 hover:text-primary">Slovn√≠k</a>
            <span class="mx-2 text-gray-400">/</span>
            <span class="text-gray-900 font-medium">${term.term}</span>
        </nav>
    </div>

    <!-- Main Content -->
    <main class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <!-- Term Header -->
        <div class="bg-white rounded-lg shadow p-8 mb-8">
            <div class="mb-6">
                <div class="flex items-center gap-3 mb-4">
                    <span class="bg-primary/10 text-primary px-3 py-1 rounded-full text-sm font-medium">${dictionaryCategories[term.category]}</span>
                    <span class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium">${term.term.charAt(0).toUpperCase()}</span>
                </div>
                <h1 class="text-4xl font-bold text-gray-900 mb-4">${term.term}</h1>
                <p class="text-xl text-gray-700 leading-relaxed">${term.definition}</p>
            </div>
        </div>
        
        <!-- Detailed Information -->
        <div class="bg-white rounded-lg shadow p-6 mb-8">
            <h2 class="text-2xl font-semibold mb-4">üìñ Podrobn√© vysvƒõtlen√≠</h2>
            <div class="prose max-w-none">
                <p class="text-gray-700 mb-4">
                    ${term.term} je d≈Øle≈æit√Ω pojem v oblasti ${dictionaryCategories[term.category].toLowerCase()}. 
                    ${term.definition}
                </p>
                
                ${term.term === 'Protein' ? `
                <h3 class="text-lg font-semibold mb-3 text-gray-900">Typy protein≈Ø:</h3>
                <ul class="list-disc pl-6 mb-4 text-gray-700">
                    <li><strong>Kompletn√≠ proteiny:</strong> Obsahuj√≠ v≈°echny esenci√°ln√≠ aminokyseliny (maso, ryby, vejce)</li>
                    <li><strong>Nekompletn√≠ proteiny:</strong> Chyb√≠ nƒõkter√© esenci√°ln√≠ aminokyseliny (vƒõt≈°ina rostlinn√Ωch zdroj≈Ø)</li>
                    <li><strong>Rychl√© proteiny:</strong> Rychle se vst≈ôeb√°vaj√≠ (whey protein)</li>
                    <li><strong>Pomal√© proteiny:</strong> Postupnƒõ uvol≈àuj√≠ aminokyseliny (kasein)</li>
                </ul>
                ` : ''}
                
                ${term.term === 'Aminokyseliny' ? `
                <h3 class="text-lg font-semibold mb-3 text-gray-900">Rozdƒõlen√≠ aminokyselin:</h3>
                <ul class="list-disc pl-6 mb-4 text-gray-700">
                    <li><strong>Esenci√°ln√≠ (9):</strong> Tƒõlo si je nedok√°≈æe vyrobit - mus√≠ b√Ωt p≈ôij√≠m√°ny potravou</li>
                    <li><strong>Neesenci√°ln√≠ (11):</strong> Tƒõlo si je dok√°≈æe vyrobit samo</li>
                    <li><strong>Podm√≠nƒõnƒõ esenci√°ln√≠:</strong> Za urƒçit√Ωch podm√≠nek se st√°vaj√≠ esenci√°ln√≠mi</li>
                </ul>
                ` : ''}
                
                ${term.term === 'BCAA' ? `
                <h3 class="text-lg font-semibold mb-3 text-gray-900">Slo≈æen√≠ BCAA:</h3>
                <ul class="list-disc pl-6 mb-4 text-gray-700">
                    <li><strong>Leucin:</strong> Nejd≈Øle≈æitƒõj≈°√≠ pro synt√©zu svalov√Ωch b√≠lkovin</li>
                    <li><strong>Isoleucin:</strong> Pom√°h√° p≈ôi energetick√©m metabolismu</li>
                    <li><strong>Valin:</strong> Podporuje regeneraci a r≈Øst sval≈Ø</li>
                </ul>
                ` : ''}
                
                <h3 class="text-lg font-semibold mb-3 text-gray-900">Praktick√© vyu≈æit√≠:</h3>
                <p class="text-gray-700 mb-4">
                    ${term.term} je zejm√©na d≈Øle≈æit√Ω pro sportovce, fitness nad≈°ence a osoby, kter√© chtƒõj√≠ zlep≈°it svou v√Ω≈æivu. 
                    Pochopen√≠ tohoto pojmu v√°m pom≈Ø≈æe l√©pe vyb√≠rat potraviny a dopl≈àky stravy.
                </p>
            </div>
        </div>
        
        <!-- Related Terms -->
        ${term.relatedTerms.length > 0 ? `
        <div class="bg-white rounded-lg shadow p-6 mb-8">
            <h2 class="text-xl font-semibold mb-4">üîó Souvisej√≠c√≠ pojmy</h2>
            <div class="flex flex-wrap gap-2">
                ${relatedTermsHtml}
            </div>
        </div>
        ` : ''}
        
        <!-- Recommended Products -->
        <div class="bg-white rounded-lg shadow p-6">
            <h2 class="text-xl font-semibold mb-4">üõí Doporuƒçen√© produkty</h2>
            <p class="text-gray-600 mb-4">Produkty z na≈°√≠ datab√°ze souvisej√≠c√≠ s pojmem "${term.term}":</p>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                ${productsData.filter(p => 
                    p.category === 'supplements' || 
                    (term.term === 'Protein' && p.proteinPer100g > 20) ||
                    (term.term === 'Aminokyseliny' && p.category === 'supplements') ||
                    (term.term === 'BCAA' && p.category === 'supplements')
                ).slice(0, 4).map(product => `
                    <div class="border rounded-lg p-4 hover:shadow-md transition-shadow">
                        <h3 class="font-semibold text-primary mb-2">
                            <a href="/protein-hunter/produkty/${product.slug}.html" class="hover:underline">${product.name}</a>
                        </h3>
                        <div class="text-sm text-gray-600 space-y-1">
                            <div>Protein: ${product.proteinPer100g}g/100g</div>
                            <div>Cena: ${product.price} Kƒç</div>
                            <div class="font-semibold text-primary">${product.pricePerGramProtein.toFixed(2)} Kƒç/g</div>
                        </div>
                    </div>
                `).join('')}
            </div>
            <div class="mt-4">
                <a href="/protein-hunter/produkty/" class="text-primary hover:underline font-medium">
                    Prohl√©dnout v≈°echny produkty ‚Üí
                </a>
            </div>
        </div>
    </main>

    ${getFooter()}
</body>
</html>`;

    fs.writeFileSync(`slovnik/${term.slug}.html`, termHtml);
    console.log(`Generated: slovnik/${term.slug}.html`);
});

// Generate blog pages
console.log('Generating blog pages...');
if (!fs.existsSync('blog')) {
    fs.mkdirSync('blog', { recursive: true });
}

// Blog categories
const blogCategories = {
    'analyze': 'Anal√Ωzy a porovn√°n√≠',
    'guide': 'Pr≈Øvodci',
    'comparison': 'Srovn√°n√≠',
    'tips': 'Tipy a triky'
};

// Generate blog index page
const blogIndexHtml = `<!DOCTYPE html>
<html lang="cs">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blog o proteinech - ${blogArticles.length} ƒçl√°nk≈Ø o v√Ω≈æivƒõ a fitness</title>
    <meta name="description" content="Odborn√© ƒçl√°nky o proteinech, v√Ω≈æivƒõ a fitness. Anal√Ωzy cen, pr≈Øvodci pro zaƒç√°teƒçn√≠ky a vƒõdeck√° srovn√°n√≠.">
    <meta name="keywords" content="blog, proteiny, v√Ω≈æiva, fitness, ƒçl√°nky, anal√Ωzy, pr≈Øvodci">
    
    <!-- Open Graph -->
    <meta property="og:title" content="Blog o proteinech - odborn√© ƒçl√°nky">
    <meta property="og:description" content="${blogArticles.length} ƒçl√°nk≈Ø o proteinech, v√Ω≈æivƒõ a fitness">
    <meta property="og:type" content="website">
    <meta property="og:url" content="http://46.62.166.240/protein-hunter/blog/">
    
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'primary': '#10b981',
                    }
                }
            }
        }
    </script>
</head>
<body class="bg-gray-50">
    ${getNavigation()}

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900 mb-4">üìù Blog o proteinech</h1>
            <p class="text-xl text-gray-600">
                ${blogArticles.length} odborn√Ωch ƒçl√°nk≈Ø o proteinech, v√Ω≈æivƒõ a fitness. Anal√Ωzy, pr≈Øvodci a vƒõdeck√° srovn√°n√≠.
            </p>
        </div>
        
        <!-- Featured articles -->
        ${blogArticles.filter(article => article.featured).length > 0 ? `
        <div class="mb-12">
            <h2 class="text-2xl font-semibold mb-6">‚≠ê Doporuƒçen√© ƒçl√°nky</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                ${blogArticles.filter(article => article.featured).map(article => `
                    <div class="bg-white rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-shadow">
                        <div class="p-6">
                            <div class="flex items-center justify-between mb-3">
                                <span class="bg-primary/10 text-primary px-3 py-1 rounded-full text-sm font-medium">${blogCategories[article.category]}</span>
                                <span class="text-sm text-gray-500">${article.readTime}</span>
                            </div>
                            <h3 class="text-xl font-bold mb-3">
                                <a href="/protein-hunter/blog/${article.slug}.html" class="text-gray-900 hover:text-primary transition-colors">${article.title}</a>
                            </h3>
                            <p class="text-gray-600 mb-4">${article.excerpt}</p>
                            <div class="flex items-center justify-between text-sm text-gray-500">
                                <span>üìÖ ${new Date(article.publishDate).toLocaleDateString('cs-CZ')}</span>
                                <span>‚úçÔ∏è ${article.author}</span>
                            </div>
                        </div>
                    </div>
                `).join('')}
            </div>
        </div>
        ` : ''}
        
        <!-- All articles -->
        <div class="bg-white rounded-lg shadow">
            <div class="px-6 py-4 border-b">
                <h2 class="text-xl font-semibold">üìÑ V≈°echny ƒçl√°nky</h2>
            </div>
            <div class="divide-y divide-gray-100">
                ${blogArticles.sort((a, b) => new Date(b.publishDate) - new Date(a.publishDate)).map(article => `
                    <div class="p-6 hover:bg-gray-50 transition-colors">
                        <div class="flex items-start justify-between">
                            <div class="flex-1">
                                <div class="flex items-center gap-3 mb-2">
                                    <span class="bg-primary/10 text-primary px-2 py-1 rounded text-sm font-medium">${blogCategories[article.category]}</span>
                                    <span class="text-sm text-gray-500">${article.readTime}</span>
                                    ${article.featured ? '<span class="bg-yellow-100 text-yellow-800 px-2 py-1 rounded text-xs font-medium">‚≠ê Doporuƒçeno</span>' : ''}
                                </div>
                                <h3 class="text-lg font-semibold text-primary mb-2">
                                    <a href="/protein-hunter/blog/${article.slug}.html" class="hover:underline">${article.title}</a>
                                </h3>
                                <p class="text-gray-600 mb-3">${article.excerpt}</p>
                                <div class="flex items-center gap-4 text-sm text-gray-500">
                                    <span>üìÖ ${new Date(article.publishDate).toLocaleDateString('cs-CZ')}</span>
                                    <span>‚úçÔ∏è ${article.author}</span>
                                    <div class="flex gap-1">
                                        ${article.tags.slice(0, 3).map(tag => `<span class="bg-gray-100 px-2 py-1 rounded text-xs">${tag}</span>`).join('')}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                `).join('')}
            </div>
        </div>
        
        <!-- Categories -->
        <div class="mt-12 bg-white rounded-lg shadow p-6">
            <h2 class="text-xl font-semibold mb-4">üóÇÔ∏è Kategorie ƒçl√°nk≈Ø</h2>
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                ${Object.entries(blogCategories).map(([category, name]) => `
                    <div class="p-3 border rounded-lg text-center">
                        <div class="font-medium text-primary">${name}</div>
                        <div class="text-sm text-gray-500">${blogArticles.filter(a => a.category === category).length} ƒçl√°nk≈Ø</div>
                    </div>
                `).join('')}
            </div>
        </div>
    </main>

    ${getFooter()}
</body>
</html>`;

fs.writeFileSync('blog/index.html', blogIndexHtml);
console.log('Generated: blog/index.html');

// Generate individual blog article pages
blogArticles.forEach(article => {
    const relatedArticles = blogArticles.filter(a => 
        a.id !== article.id && 
        (a.category === article.category || a.tags.some(tag => article.tags.includes(tag)))
    ).slice(0, 2);

    const articleHtml = `<!DOCTYPE html>
<html lang="cs">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${article.title} - Protein Hunter Blog</title>
    <meta name="description" content="${article.excerpt}">
    <meta name="keywords" content="${article.tags.join(', ')}, protein, blog, v√Ω≈æiva">
    
    <!-- Open Graph -->
    <meta property="og:title" content="${article.title}">
    <meta property="og:description" content="${article.excerpt}">
    <meta property="og:type" content="article">
    <meta property="og:url" content="http://46.62.166.240/protein-hunter/blog/${article.slug}.html">
    <meta property="article:published_time" content="${article.publishDate}">
    <meta property="article:author" content="${article.author}">
    
    <!-- Schema.org structured data -->
    <script type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@type": "BlogPosting",
        "headline": "${article.title}",
        "description": "${article.excerpt}",
        "author": {
            "@type": "Organization",
            "name": "${article.author}"
        },
        "datePublished": "${article.publishDate}",
        "dateModified": "${article.publishDate}",
        "publisher": {
            "@type": "Organization",
            "name": "Protein Hunter",
            "url": "http://46.62.166.240/protein-hunter/"
        },
        "mainEntityOfPage": {
            "@type": "WebPage",
            "@id": "http://46.62.166.240/protein-hunter/blog/${article.slug}.html"
        }
    }
    </script>
    
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'primary': '#10b981',
                    }
                }
            }
        }
    </script>
</head>
<body class="bg-gray-50">
    ${getNavigation()}

    <!-- Breadcrumbs -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-3">
        <nav class="text-sm">
            <a href="/protein-hunter/" class="text-gray-500 hover:text-primary">Dom≈Ø</a>
            <span class="mx-2 text-gray-400">/</span>
            <a href="/protein-hunter/blog/" class="text-gray-500 hover:text-primary">Blog</a>
            <span class="mx-2 text-gray-400">/</span>
            <span class="text-gray-900 font-medium">${article.title}</span>
        </nav>
    </div>

    <!-- Main Content -->
    <main class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <!-- Article Header -->
        <div class="bg-white rounded-lg shadow p-8 mb-8">
            <div class="mb-6">
                <div class="flex items-center gap-3 mb-4">
                    <span class="bg-primary/10 text-primary px-3 py-1 rounded-full text-sm font-medium">${blogCategories[article.category]}</span>
                    <span class="text-sm text-gray-500">${article.readTime}</span>
                    ${article.featured ? '<span class="bg-yellow-100 text-yellow-800 px-2 py-1 rounded text-xs font-medium">‚≠ê Doporuƒçeno</span>' : ''}
                </div>
                <h1 class="text-4xl font-bold text-gray-900 mb-4">${article.title}</h1>
                <p class="text-xl text-gray-600 leading-relaxed mb-6">${article.excerpt}</p>
                <div class="flex items-center justify-between text-sm text-gray-500 border-t pt-4">
                    <div class="flex items-center gap-4">
                        <span>üìÖ ${new Date(article.publishDate).toLocaleDateString('cs-CZ')}</span>
                        <span>‚úçÔ∏è ${article.author}</span>
                    </div>
                    <div class="flex gap-1">
                        ${article.tags.map(tag => `<span class="bg-gray-100 px-2 py-1 rounded text-xs">${tag}</span>`).join('')}
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Article Content -->
        <div class="bg-white rounded-lg shadow p-8 mb-8">
            <div class="prose max-w-none">
                ${article.content}
            </div>
        </div>
        
        <!-- Related Articles -->
        ${relatedArticles.length > 0 ? `
        <div class="bg-white rounded-lg shadow p-6">
            <h2 class="text-xl font-semibold mb-4">üìñ Souvisej√≠c√≠ ƒçl√°nky</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                ${relatedArticles.map(related => `
                    <div class="border rounded-lg p-4 hover:shadow-md transition-shadow">
                        <div class="flex items-center gap-2 mb-2">
                            <span class="bg-primary/10 text-primary px-2 py-1 rounded text-xs font-medium">${blogCategories[related.category]}</span>
                            <span class="text-xs text-gray-500">${related.readTime}</span>
                        </div>
                        <h3 class="font-semibold text-primary mb-2">
                            <a href="/protein-hunter/blog/${related.slug}.html" class="hover:underline">${related.title}</a>
                        </h3>
                        <p class="text-sm text-gray-600 mb-2">${related.excerpt}</p>
                        <div class="text-xs text-gray-500">üìÖ ${new Date(related.publishDate).toLocaleDateString('cs-CZ')}</div>
                    </div>
                `).join('')}
            </div>
        </div>
        ` : ''}
    </main>

    ${getFooter()}
</body>
</html>`;

    fs.writeFileSync(`blog/${article.slug}.html`, articleHtml);
    console.log(`Generated: blog/${article.slug}.html`);
});

// Generate category pages
console.log('Generating category pages...');
if (!fs.existsSync('kategorie')) {
    fs.mkdirSync('kategorie', { recursive: true });
}

Object.entries(categoryNames).forEach(([categorySlug, categoryName]) => {
    if (categorySlug === 'other') return; // Skip 'other' category
    
    const categoryProducts = productsData.filter(p => p.category === categorySlug)
        .sort((a, b) => a.pricePerGramProtein - b.pricePerGramProtein);
    
    const categoryHtml = `<!DOCTYPE html>
<html lang="cs">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${categoryName} - ${categoryProducts.length} produkt≈Ø s cenami za protein</title>
    <meta name="description" content="${categoryName}: ${categoryProducts.length} produkt≈Ø se≈ôazen√Ωch podle ceny za gram proteinu. Porovnejte nejlevnƒõj≈°√≠ zdroje proteinu v kategorii ${categoryName.toLowerCase()}.">
    <meta name="keywords" content="${categoryName.toLowerCase()}, protein, cena proteinu, nejlevnƒõj≈°√≠ protein, ${categorySlug}">
    
    <!-- Open Graph -->
    <meta property="og:title" content="${categoryName} - ${categoryProducts.length} produkt≈Ø">
    <meta property="og:description" content="Porovnejte ceny za gram proteinu v kategorii ${categoryName.toLowerCase()}">
    <meta property="og:type" content="website">
    <meta property="og:url" content="http://46.62.166.240/protein-hunter/kategorie/${categorySlug}.html">
    
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'primary': '#10b981',
                    }
                }
            }
        }
    </script>
</head>
<body class="bg-gray-50">
    ${getNavigation()}

    <!-- Breadcrumbs -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-3">
        <nav class="text-sm">
            <a href="/protein-hunter/" class="text-gray-500 hover:text-primary">Dom≈Ø</a>
            <span class="mx-2 text-gray-400">/</span>
            <a href="/protein-hunter/produkty/" class="text-gray-500 hover:text-primary">Produkty</a>
            <span class="mx-2 text-gray-400">/</span>
            <span class="text-gray-900 font-medium">${categoryName}</span>
        </nav>
    </div>

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900 mb-4">${categoryName}</h1>
            <p class="text-xl text-gray-600">
                ${categoryProducts.length} produkt≈Ø v kategorii ${categoryName.toLowerCase()} se≈ôazen√Ωch podle nejlep≈°√≠ho pomƒõru cena/protein.
                ${categoryProducts.length > 0 ? `Nejlevnƒõj≈°√≠ protein: ${categoryProducts[0].pricePerGramProtein.toFixed(2)} Kƒç/g.` : ''}
            </p>
        </div>
        
        ${categoryProducts.length > 0 ? `
        <!-- Category stats -->
        <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
            <div class="bg-white p-4 rounded-lg shadow text-center">
                <div class="text-2xl font-bold text-primary">${categoryProducts.length}</div>
                <div class="text-sm text-gray-600">Produkt≈Ø</div>
            </div>
            <div class="bg-white p-4 rounded-lg shadow text-center">
                <div class="text-2xl font-bold text-green-600">${categoryProducts[0].pricePerGramProtein.toFixed(2)} Kƒç</div>
                <div class="text-sm text-gray-600">Nejlevnƒõj≈°√≠ protein/g</div>
            </div>
            <div class="bg-white p-4 rounded-lg shadow text-center">
                <div class="text-2xl font-bold text-blue-600">${Math.max(...categoryProducts.map(p => p.proteinPer100g)).toFixed(1)}g</div>
                <div class="text-sm text-gray-600">Nejv√≠ce protein/100g</div>
            </div>
            <div class="bg-white p-4 rounded-lg shadow text-center">
                <div class="text-2xl font-bold text-purple-600">${(categoryProducts.reduce((sum, p) => sum + p.pricePerGramProtein, 0) / categoryProducts.length).toFixed(2)} Kƒç</div>
                <div class="text-sm text-gray-600">Pr≈Ømƒõr Kƒç/g</div>
            </div>
        </div>
        
        <!-- Products list -->
        <div class="bg-white rounded-lg shadow">
            <div class="px-6 py-4 border-b">
                <h2 class="text-xl font-semibold">üìä V≈°echny produkty se≈ôazen√© podle ceny</h2>
            </div>
            <div class="divide-y divide-gray-100">
                ${categoryProducts.map((product, index) => `
                    <div class="p-4 hover:bg-gray-50 transition-colors">
                        <a href="/protein-hunter/produkty/${product.slug}.html" class="block">
                            <div class="flex items-center justify-between">
                                <div class="flex items-center gap-4">
                                    <div class="text-center">
                                        <div class="text-xl">${index < 3 ? ['üèÜ', 'ü•à', 'ü•â'][index] : `#${index + 1}`}</div>
                                    </div>
                                    <div>
                                        <h3 class="font-semibold text-primary hover:underline">${product.name}</h3>
                                        <div class="text-sm text-gray-600">
                                            <span>${product.price} Kƒç ‚Ä¢ ${product.weight >= 1000 ? (product.weight/1000).toFixed(1) + ' kg' : product.weight + ' g'}</span>
                                            <span class="mx-1">‚Ä¢</span>
                                            <span>${product.proteinPer100g}g protein/100g</span>
                                            <span class="mx-1">‚Ä¢</span>
                                            <span class="font-medium">${product.totalProtein}g celkem</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="text-right">
                                    <div class="text-2xl font-bold text-primary">${product.pricePerGramProtein.toFixed(2)} Kƒç</div>
                                    <div class="text-xs text-gray-500">za 1g proteinu</div>
                                </div>
                            </div>
                        </a>
                    </div>
                `).join('')}
            </div>
        </div>
        ` : `
        <div class="bg-white rounded-lg shadow p-8 text-center">
            <div class="text-gray-400 text-6xl mb-4">üì≠</div>
            <h2 class="text-xl font-semibold text-gray-900 mb-2">Zat√≠m ≈æ√°dn√© produkty</h2>
            <p class="text-gray-600">V kategorii ${categoryName.toLowerCase()} zat√≠m nem√°me ≈æ√°dn√© produkty.</p>
            <a href="/protein-hunter/produkty/" class="inline-block mt-4 bg-primary text-white px-6 py-2 rounded-lg hover:bg-green-600 transition-colors">
                Prohl√©dnout v≈°echny produkty
            </a>
        </div>
        `}
        
        <!-- Related categories -->
        <div class="mt-12 bg-white rounded-lg shadow p-6">
            <h2 class="text-xl font-semibold mb-4">üîó Dal≈°√≠ kategorie</h2>
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                ${Object.entries(categoryNames).filter(([slug]) => slug !== categorySlug && slug !== 'other').map(([slug, name]) => `
                    <a href="/protein-hunter/kategorie/${slug}.html" class="p-3 border rounded-lg hover:shadow-md transition-shadow text-center">
                        <div class="font-medium text-primary">${name}</div>
                        <div class="text-sm text-gray-500">${productsData.filter(p => p.category === slug).length} produkt≈Ø</div>
                    </a>
                `).join('')}
            </div>
        </div>
    </main>

    ${getFooter()}
</body>
</html>`;

    fs.writeFileSync(`kategorie/${categorySlug}.html`, categoryHtml);
    console.log(`Generated: kategorie/${categorySlug}.html`);
});

// Generate comparison pages
console.log('Generating comparison pages...');
if (!fs.existsSync('porovnani')) {
    fs.mkdirSync('porovnani', { recursive: true });
}

// Generate top 20 comparisons (most interesting product pairs)
const topComparisons = [
    { product1: 'tvaroh-polotucny-pilos', product2: 'cottage-cheese-pribinacek', reason: 'Porovn√°n√≠ dvou nejlevnƒõj≈°√≠ch ml√©ƒçn√Ωch protein≈Ø' },
    { product1: 'kureci-prsa', product2: 'kruti-prsa', reason: 'Ku≈ôec√≠ vs kr≈Øt√≠ - co je lep≈°√≠?' },
    { product1: 'whey-protein-nutrend', product2: 'beef-protein', reason: 'Syrov√°tkov√Ω vs hovƒõz√≠ protein' },
    { product1: 'tofu-lunter', product2: 'tempeh', reason: 'Tofu vs tempeh - rostlinn√© proteiny' },
    { product1: 'cerne-fazole', product2: 'quinoa-bila', reason: 'Fazole vs quinoa - kter√Ω je lep≈°√≠?' },
    { product1: 'losos-norsky-filet', product2: 'tunak-v-oleji', reason: 'Losos vs tu≈à√°k - omega-3 souboj' },
    { product1: 'recky-jogurt-0-milko', product2: 'proteinovy-jogurt-danone', reason: '≈òeck√Ω jogurt vs proteinov√Ω jogurt' },
    { product1: 'arasidove-maslo', product2: 'tahini-pasta', reason: 'Ara≈°√≠dov√© m√°slo vs tahini' },
    { product1: 'ovesne-vlocky-jemne', product2: 'quinoa-bila', reason: 'Ovesn√© vloƒçky vs quinoa' },
    { product1: 'mandlova-mouka', product2: 'kokosova-mouka', reason: 'Mandlov√° vs kokosov√° mouka' }
];

topComparisons.forEach(comp => {
    const prod1 = productsData.find(p => p.slug === comp.product1);
    const prod2 = productsData.find(p => p.slug === comp.product2);

    if (!prod1 || !prod2) return;

    const compSlug = `${prod1.slug}-vs-${prod2.slug}`;
    const protein1Per100 = prod1.proteinPer100g;
    const protein2Per100 = prod2.proteinPer100g;
    const price1PerProtein = (prod1.price / prod1.weight / protein1Per100 * 100).toFixed(2);
    const price2PerProtein = (prod2.price / prod2.weight / protein2Per100 * 100).toFixed(2);

    const comparisonHtml = `<!DOCTYPE html>
<html lang="cs">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${prod1.name} vs ${prod2.name} - Porovn√°n√≠ proteinu a ceny | Protein Hunter</title>
    <meta name="description" content="${comp.reason}. Detailn√≠ porovn√°n√≠ obsahu proteinu, ceny za gram a nutriƒçn√≠ hodnoty mezi ${prod1.name} a ${prod2.name}.">
    <meta name="keywords" content="${prod1.name}, ${prod2.name}, porovn√°n√≠, protein, cena, nutriƒçn√≠ hodnoty">

    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'primary': '#10b981',
                    }
                }
            }
        }
    </script>
</head>
<body class="bg-gray-50">
    ${getNavigation()}

    <main class="max-w-7xl mx-auto px-4 py-12">
        <!-- Header -->
        <div class="mb-8">
            <nav class="text-sm text-gray-500 mb-4">
                <a href="/protein-hunter/" class="hover:text-primary">Dom≈Ø</a>
                <span class="mx-2">/</span>
                <a href="/protein-hunter/porovnani/" class="hover:text-primary">Porovn√°n√≠</a>
                <span class="mx-2">/</span>
                <span>${prod1.name} vs ${prod2.name}</span>
            </nav>
            <h1 class="text-4xl font-bold text-gray-900 mb-4">‚öñÔ∏è ${prod1.name} vs ${prod2.name}</h1>
            <p class="text-xl text-gray-600">${comp.reason}</p>
        </div>

        <!-- Quick Comparison -->
        <div class="grid md:grid-cols-2 gap-6 mb-12">
            <!-- Product 1 -->
            <div class="bg-white rounded-lg shadow-lg p-6 ${protein1Per100 > protein2Per100 ? 'ring-2 ring-primary' : ''}">
                ${protein1Per100 > protein2Per100 ? '<div class="bg-primary text-white text-sm font-bold px-3 py-1 rounded-full inline-block mb-4">üèÜ V√≠ce proteinu</div>' : ''}
                <h2 class="text-2xl font-bold mb-4">${prod1.name}</h2>
                <div class="space-y-3">
                    <div class="flex justify-between">
                        <span class="text-gray-600">Protein na 100g:</span>
                        <span class="font-bold text-lg">${protein1Per100}g</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-gray-600">Cena:</span>
                        <span class="font-bold">${prod1.price} Kƒç</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-gray-600">Hmotnost:</span>
                        <span class="font-bold">${prod1.weight}g</span>
                    </div>
                    <div class="flex justify-between border-t pt-3">
                        <span class="text-gray-600">Cena za 1g proteinu:</span>
                        <span class="font-bold text-primary">${price1PerProtein} Kƒç</span>
                    </div>
                </div>
                <a href="/protein-hunter/produkty/${prod1.slug}.html" class="block mt-6 text-center bg-primary text-white px-6 py-3 rounded-lg hover:bg-green-600 transition-colors">
                    Detail produktu ‚Üí
                </a>
            </div>

            <!-- Product 2 -->
            <div class="bg-white rounded-lg shadow-lg p-6 ${protein2Per100 > protein1Per100 ? 'ring-2 ring-primary' : ''}">
                ${protein2Per100 > protein1Per100 ? '<div class="bg-primary text-white text-sm font-bold px-3 py-1 rounded-full inline-block mb-4">üèÜ V√≠ce proteinu</div>' : ''}
                <h2 class="text-2xl font-bold mb-4">${prod2.name}</h2>
                <div class="space-y-3">
                    <div class="flex justify-between">
                        <span class="text-gray-600">Protein na 100g:</span>
                        <span class="font-bold text-lg">${protein2Per100}g</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-gray-600">Cena:</span>
                        <span class="font-bold">${prod2.price} Kƒç</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-gray-600">Hmotnost:</span>
                        <span class="font-bold">${prod2.weight}g</span>
                    </div>
                    <div class="flex justify-between border-t pt-3">
                        <span class="text-gray-600">Cena za 1g proteinu:</span>
                        <span class="font-bold text-primary">${price2PerProtein} Kƒç</span>
                    </div>
                </div>
                <a href="/protein-hunter/produkty/${prod2.slug}.html" class="block mt-6 text-center bg-primary text-white px-6 py-3 rounded-lg hover:bg-green-600 transition-colors">
                    Detail produktu ‚Üí
                </a>
            </div>
        </div>

        <!-- Winner -->
        <div class="bg-gradient-to-r from-green-50 to-emerald-50 rounded-lg p-8 mb-12">
            <h2 class="text-2xl font-bold mb-4">üèÜ Verdikt</h2>
            <div class="prose max-w-none">
                <p class="text-lg mb-4">
                    <strong>${parseFloat(price1PerProtein) < parseFloat(price2PerProtein) ? prod1.name : prod2.name}</strong>
                    vyhr√°v√° v pomƒõru cena/protein s hodnotou
                    <strong>${Math.min(parseFloat(price1PerProtein), parseFloat(price2PerProtein)).toFixed(2)} Kƒç za gram proteinu</strong>.
                </p>
                <p class="text-gray-700">
                    ${protein1Per100 > protein2Per100 ?
                        `${prod1.name} obsahuje v√≠ce proteinu (${protein1Per100}g vs ${protein2Per100}g na 100g).` :
                        `${prod2.name} obsahuje v√≠ce proteinu (${protein2Per100}g vs ${protein1Per100}g na 100g).`
                    }
                </p>
            </div>
        </div>

        <!-- More Comparisons -->
        <div class="bg-white rounded-lg shadow p-6">
            <h2 class="text-xl font-semibold mb-4">üîç Dal≈°√≠ porovn√°n√≠</h2>
            <div class="grid md:grid-cols-2 gap-4">
                ${topComparisons.filter(c => c.product1 !== comp.product1 && c.product2 !== comp.product2).slice(0, 4).map(c => {
                    const p1 = productsData.find(p => p.slug === c.product1);
                    const p2 = productsData.find(p => p.slug === c.product2);
                    if (!p1 || !p2) return '';
                    return `<a href="/protein-hunter/porovnani/${p1.slug}-vs-${p2.slug}.html" class="p-4 border rounded-lg hover:shadow-md transition-shadow">
                        <div class="font-medium">${p1.name} vs ${p2.name}</div>
                        <div class="text-sm text-gray-500">${c.reason}</div>
                    </a>`;
                }).join('')}
            </div>
        </div>
    </main>

    ${getFooter()}
</body>
</html>`;

    fs.writeFileSync(`porovnani/${compSlug}.html`, comparisonHtml);
    console.log(`Generated: porovnani/${compSlug}.html`);
});

// Generate comparison index page
const comparisonIndexHtml = `<!DOCTYPE html>
<html lang="cs">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Porovn√°n√≠ proteinov√Ωch potravin - ${topComparisons.length} detailn√≠ch srovn√°n√≠ | Protein Hunter</title>
    <meta name="description" content="P≈ô√≠m√° porovn√°n√≠ ${topComparisons.length} nejobl√≠benƒõj≈°√≠ch proteinov√Ωch potravin. Zjistƒõte, kter√Ω produkt nab√≠z√≠ nejlep≈°√≠ pomƒõr cena/protein.">
    <meta name="keywords" content="porovn√°n√≠ protein≈Ø, srovn√°n√≠ cen, protein, fitness, v√Ω≈æiva">

    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'primary': '#10b981',
                    }
                }
            }
        }
    </script>
</head>
<body class="bg-gray-50">
    ${getNavigation()}

    <main class="max-w-7xl mx-auto px-4 py-12">
        <!-- Header -->
        <div class="mb-8">
            <h1 class="text-4xl font-bold text-gray-900 mb-4">‚öñÔ∏è Porovn√°n√≠ proteinov√Ωch potravin</h1>
            <p class="text-xl text-gray-600">
                P≈ô√≠m√° souboje nejobl√≠benƒõj≈°√≠ch proteinov√Ωch potravin. Zjistƒõte, kter√Ω produkt v√≠tƒõz√≠ v pomƒõru cena/protein.
            </p>
        </div>

        <!-- Comparisons Grid -->
        <div class="grid md:grid-cols-2 gap-6">
            ${topComparisons.map(comp => {
                const prod1 = productsData.find(p => p.slug === comp.product1);
                const prod2 = productsData.find(p => p.slug === comp.product2);
                if (!prod1 || !prod2) return '';

                const winner = prod1.pricePerGramProtein < prod2.pricePerGramProtein ? prod1 : prod2;

                return `
                <a href="/protein-hunter/porovnani/${comp.product1}-vs-${comp.product2}.html" class="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow">
                    <div class="mb-4">
                        <span class="inline-block bg-primary/10 text-primary px-3 py-1 rounded-full text-sm">
                            ${comp.reason}
                        </span>
                    </div>

                    <div class="flex items-center justify-between mb-4">
                        <div class="text-center flex-1">
                            <h3 class="font-bold text-lg mb-2">${prod1.name}</h3>
                            <div class="text-2xl font-bold ${prod1.pricePerGramProtein < prod2.pricePerGramProtein ? 'text-green-600' : 'text-gray-600'}">
                                ${prod1.pricePerGramProtein.toFixed(2)} Kƒç
                            </div>
                            <div class="text-sm text-gray-500">za 1g proteinu</div>
                        </div>

                        <div class="text-3xl font-bold mx-4 text-gray-400">VS</div>

                        <div class="text-center flex-1">
                            <h3 class="font-bold text-lg mb-2">${prod2.name}</h3>
                            <div class="text-2xl font-bold ${prod2.pricePerGramProtein < prod1.pricePerGramProtein ? 'text-green-600' : 'text-gray-600'}">
                                ${prod2.pricePerGramProtein.toFixed(2)} Kƒç
                            </div>
                            <div class="text-sm text-gray-500">za 1g proteinu</div>
                        </div>
                    </div>

                    <div class="text-center pt-4 border-t">
                        <div class="text-sm font-medium text-gray-700">
                            üèÜ V√≠tƒõz: <span class="text-primary">${winner.name}</span>
                        </div>
                        <div class="text-xs text-gray-500 mt-1">
                            √öspora: ${Math.abs(prod1.pricePerGramProtein - prod2.pricePerGramProtein).toFixed(2)} Kƒç/g
                        </div>
                    </div>
                </a>
                `;
            }).join('')}
        </div>

        <!-- CTA Section -->
        <div class="mt-12 bg-gradient-to-r from-green-50 to-emerald-50 rounded-lg p-8 text-center">
            <h2 class="text-2xl font-bold mb-4">üí° Chcete porovnat jin√© produkty?</h2>
            <p class="text-gray-700 mb-6">Prohl√©dnƒõte si celou datab√°zi produkt≈Ø a najdƒõte nejlep≈°√≠ zdroje proteinu pro va≈°e pot≈ôeby.</p>
            <a href="/protein-hunter/produkty/" class="inline-block bg-primary text-white px-8 py-3 rounded-lg hover:bg-green-600 transition-colors">
                üìä V≈°echny produkty
            </a>
        </div>
    </main>

    ${getFooter()}
</body>
</html>`;

fs.writeFileSync('porovnani/index.html', comparisonIndexHtml);
console.log('Generated: porovnani/index.html');

console.log('‚úÖ Programmatic SEO pages generated successfully!');
console.log(`üìä Generated ${productsData.length} product pages + 1 index page`);
console.log(`üçΩÔ∏è Generated ${recipesData.length + Object.keys(recipeCategories).length} recipe pages`);
console.log(`üìö Generated ${dictionaryTerms.length + 1} dictionary pages (${dictionaryTerms.length} terms + 1 index)`);
console.log(`üìù Generated ${blogArticles.length + 1} blog pages (${blogArticles.length} articles + 1 index)`);
console.log(`‚öñÔ∏è Generated ${topComparisons.length} comparison pages`);
console.log(`üóÇÔ∏è Generated ${Object.keys(categoryNames).length - 1} category pages`);
console.log('üåê Each page has unique URLs, meta tags, and Schema.org markup');

// Calculate total pages
const totalPages = productsData.length + 1 + // products + index
                  recipesData.length + Object.keys(recipeCategories).length + 1 + // recipes + categories + index
                  dictionaryTerms.length + 1 + // dictionary terms + index
                  blogArticles.length + 1 + // blog articles + index
                  topComparisons.length + 1 + // comparison pages + index
                  Object.keys(categoryNames).length - 1; // categories (excluding 'other')

console.log(`üöÄ TOTAL: ${totalPages} SEO-optimized pages generated!`);